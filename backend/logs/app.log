2024-10-09 13:32:20.111 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-10-09 13:32:21.164 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-10-09 13:32:21.182 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-10-09 13:32:21.186 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2024-10-09 13:32:21.186 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-10-09 13:32:21.241 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-09 13:32:21.254 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1091 ms
2024-10-09 13:32:21.557 [main] WARN  org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'exchangeDateController': Unsatisfied dependency expressed through field 'exchangeRateService': Error creating bean with name 'exchangeRateService': Unsatisfied dependency expressed through field 'exchangeRateMapper': Error creating bean with name 'exchangeRateMapper' defined in file [D:\Code\Java\Bookkeeping\backend\target\classes\com\jngyen\bookkeeping\backend\mapper\ExchangeRateMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
2024-10-09 13:32:21.559 [main] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2024-10-09 13:32:21.573 [main] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-10-09 13:32:21.592 [main] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'exchangeDateController': Unsatisfied dependency expressed through field 'exchangeRateService': Error creating bean with name 'exchangeRateService': Unsatisfied dependency expressed through field 'exchangeRateMapper': Error creating bean with name 'exchangeRateMapper' defined in file [D:\Code\Java\Bookkeeping\backend\target\classes\com\jngyen\bookkeeping\backend\mapper\ExchangeRateMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971) ~[spring-context-6.1.13.jar:6.1.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) ~[spring-context-6.1.13.jar:6.1.13]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.3.4.jar:3.3.4]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.4.jar:3.3.4]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.4.jar:3.3.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.4.jar:3.3.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.4.jar:3.3.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.4.jar:3.3.4]
	at com.jngyen.bookkeeping.backend.BackendApplication.main(BackendApplication.java:10) [classes/:?]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'exchangeRateService': Unsatisfied dependency expressed through field 'exchangeRateMapper': Error creating bean with name 'exchangeRateMapper' defined in file [D:\Code\Java\Bookkeeping\backend\target\classes\com\jngyen\bookkeeping\backend\mapper\ExchangeRateMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'exchangeRateMapper' defined in file [D:\Code\Java\Bookkeeping\backend\target\classes\com\jngyen\bookkeeping\backend\mapper\ExchangeRateMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionTemplate' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionTemplate' parameter 0: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\Code\Java\Bookkeeping\backend\target\classes\mapper\UserConfig.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\Code\Java\Bookkeeping\backend\target\classes\mapper\UserConfig.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\Code\Java\Bookkeeping\backend\target\classes\mapper\UserConfig.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:178) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\Code\Java\Bookkeeping\backend\target\classes\mapper\UserConfig.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:189) ~[mybatis-spring-boot-autoconfigure-3.0.3.jar:3.0.3]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:146) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
Caused by: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 52; columnNumber: 5; XML 文档结构必须从头至尾包含在同一个实体内。
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:262) ~[mybatis-3.5.14.jar:3.5.14]
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:127) ~[mybatis-3.5.14.jar:3.5.14]
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.<init>(XMLMapperBuilder.java:85) ~[mybatis-3.5.14.jar:3.5.14]
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:697) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:189) ~[mybatis-spring-boot-autoconfigure-3.0.3.jar:3.0.3]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:146) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
Caused by: org.xml.sax.SAXParseException: XML 文档结构必须从头至尾包含在同一个实体内。
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:204) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:178) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1465) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.endEntity(XMLDocumentFragmentScannerImpl.java:943) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.endEntity(XMLDocumentScannerImpl.java:562) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLEntityManager.endEntity(XMLEntityManager.java:1504) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.load(XMLEntityScanner.java:1720) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.skipChar(XMLEntityScanner.java:1375) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2762) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:605) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:542) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:889) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:825) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:247) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:342) ~[?:?]
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:260) ~[mybatis-3.5.14.jar:3.5.14]
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:127) ~[mybatis-3.5.14.jar:3.5.14]
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.<init>(XMLMapperBuilder.java:85) ~[mybatis-3.5.14.jar:3.5.14]
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:697) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:189) ~[mybatis-spring-boot-autoconfigure-3.0.3.jar:3.0.3]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:146) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
2024-10-09 13:36:50.139 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-10-09 13:36:51.145 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-10-09 13:36:51.156 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-10-09 13:36:51.161 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2024-10-09 13:36:51.161 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-10-09 13:36:51.212 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-09 13:36:51.213 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 998 ms
2024-10-09 13:36:51.455 [main] WARN  org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'exchangeDateController': Unsatisfied dependency expressed through field 'exchangeRateService': Error creating bean with name 'exchangeRateService': Unsatisfied dependency expressed through field 'exchangeRateMapper': Error creating bean with name 'exchangeRateMapper' defined in file [D:\Code\Java\Bookkeeping\backend\target\classes\com\jngyen\bookkeeping\backend\mapper\ExchangeRateMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
2024-10-09 13:36:51.456 [main] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2024-10-09 13:36:51.471 [main] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-10-09 13:36:51.496 [main] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'exchangeDateController': Unsatisfied dependency expressed through field 'exchangeRateService': Error creating bean with name 'exchangeRateService': Unsatisfied dependency expressed through field 'exchangeRateMapper': Error creating bean with name 'exchangeRateMapper' defined in file [D:\Code\Java\Bookkeeping\backend\target\classes\com\jngyen\bookkeeping\backend\mapper\ExchangeRateMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971) ~[spring-context-6.1.13.jar:6.1.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) ~[spring-context-6.1.13.jar:6.1.13]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.3.4.jar:3.3.4]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.4.jar:3.3.4]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.4.jar:3.3.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.4.jar:3.3.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.4.jar:3.3.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.4.jar:3.3.4]
	at com.jngyen.bookkeeping.backend.BackendApplication.main(BackendApplication.java:10) [classes/:?]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'exchangeRateService': Unsatisfied dependency expressed through field 'exchangeRateMapper': Error creating bean with name 'exchangeRateMapper' defined in file [D:\Code\Java\Bookkeeping\backend\target\classes\com\jngyen\bookkeeping\backend\mapper\ExchangeRateMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'exchangeRateMapper' defined in file [D:\Code\Java\Bookkeeping\backend\target\classes\com\jngyen\bookkeeping\backend\mapper\ExchangeRateMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionTemplate' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionTemplate' parameter 0: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\Code\Java\Bookkeeping\backend\target\classes\mapper\UserConfig.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\Code\Java\Bookkeeping\backend\target\classes\mapper\UserConfig.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\Code\Java\Bookkeeping\backend\target\classes\mapper\UserConfig.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:178) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\Code\Java\Bookkeeping\backend\target\classes\mapper\UserConfig.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:189) ~[mybatis-spring-boot-autoconfigure-3.0.3.jar:3.0.3]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:146) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
Caused by: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 52; columnNumber: 5; XML 文档结构必须从头至尾包含在同一个实体内。
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:262) ~[mybatis-3.5.14.jar:3.5.14]
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:127) ~[mybatis-3.5.14.jar:3.5.14]
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.<init>(XMLMapperBuilder.java:85) ~[mybatis-3.5.14.jar:3.5.14]
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:697) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:189) ~[mybatis-spring-boot-autoconfigure-3.0.3.jar:3.0.3]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:146) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
Caused by: org.xml.sax.SAXParseException: XML 文档结构必须从头至尾包含在同一个实体内。
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:204) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:178) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1465) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.endEntity(XMLDocumentFragmentScannerImpl.java:943) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.endEntity(XMLDocumentScannerImpl.java:562) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLEntityManager.endEntity(XMLEntityManager.java:1504) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.load(XMLEntityScanner.java:1720) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.skipChar(XMLEntityScanner.java:1375) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2762) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:605) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:542) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:889) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:825) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:247) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:342) ~[?:?]
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:260) ~[mybatis-3.5.14.jar:3.5.14]
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:127) ~[mybatis-3.5.14.jar:3.5.14]
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.<init>(XMLMapperBuilder.java:85) ~[mybatis-3.5.14.jar:3.5.14]
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:697) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:189) ~[mybatis-spring-boot-autoconfigure-3.0.3.jar:3.0.3]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:146) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
2024-10-09 13:43:00.184 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-10-09 13:43:01.173 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-10-09 13:43:01.188 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-10-09 13:43:01.192 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2024-10-09 13:43:01.194 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-10-09 13:43:01.249 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-09 13:43:01.249 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 980 ms
2024-10-09 13:43:01.518 [main] WARN  org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'exchangeDateController': Unsatisfied dependency expressed through field 'exchangeRateService': Error creating bean with name 'exchangeRateService': Unsatisfied dependency expressed through field 'exchangeRateMapper': Error creating bean with name 'exchangeRateMapper' defined in file [D:\Code\Java\Bookkeeping\backend\target\classes\com\jngyen\bookkeeping\backend\mapper\ExchangeRateMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
2024-10-09 13:43:01.521 [main] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2024-10-09 13:43:01.533 [main] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-10-09 13:43:01.550 [main] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'exchangeDateController': Unsatisfied dependency expressed through field 'exchangeRateService': Error creating bean with name 'exchangeRateService': Unsatisfied dependency expressed through field 'exchangeRateMapper': Error creating bean with name 'exchangeRateMapper' defined in file [D:\Code\Java\Bookkeeping\backend\target\classes\com\jngyen\bookkeeping\backend\mapper\ExchangeRateMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971) ~[spring-context-6.1.13.jar:6.1.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) ~[spring-context-6.1.13.jar:6.1.13]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.3.4.jar:3.3.4]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.4.jar:3.3.4]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.4.jar:3.3.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.4.jar:3.3.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.4.jar:3.3.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.4.jar:3.3.4]
	at com.jngyen.bookkeeping.backend.BackendApplication.main(BackendApplication.java:10) [classes/:?]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'exchangeRateService': Unsatisfied dependency expressed through field 'exchangeRateMapper': Error creating bean with name 'exchangeRateMapper' defined in file [D:\Code\Java\Bookkeeping\backend\target\classes\com\jngyen\bookkeeping\backend\mapper\ExchangeRateMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'exchangeRateMapper' defined in file [D:\Code\Java\Bookkeeping\backend\target\classes\com\jngyen\bookkeeping\backend\mapper\ExchangeRateMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionTemplate' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionTemplate' parameter 0: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\Code\Java\Bookkeeping\backend\target\classes\mapper\UserConfig.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\Code\Java\Bookkeeping\backend\target\classes\mapper\UserConfig.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\Code\Java\Bookkeeping\backend\target\classes\mapper\UserConfig.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:178) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\Code\Java\Bookkeeping\backend\target\classes\mapper\UserConfig.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:189) ~[mybatis-spring-boot-autoconfigure-3.0.3.jar:3.0.3]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:146) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
Caused by: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 52; columnNumber: 5; XML 文档结构必须从头至尾包含在同一个实体内。
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:262) ~[mybatis-3.5.14.jar:3.5.14]
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:127) ~[mybatis-3.5.14.jar:3.5.14]
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.<init>(XMLMapperBuilder.java:85) ~[mybatis-3.5.14.jar:3.5.14]
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:697) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:189) ~[mybatis-spring-boot-autoconfigure-3.0.3.jar:3.0.3]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:146) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
Caused by: org.xml.sax.SAXParseException: XML 文档结构必须从头至尾包含在同一个实体内。
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:204) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:178) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1465) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.endEntity(XMLDocumentFragmentScannerImpl.java:943) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.endEntity(XMLDocumentScannerImpl.java:562) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLEntityManager.endEntity(XMLEntityManager.java:1504) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.load(XMLEntityScanner.java:1720) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.skipChar(XMLEntityScanner.java:1375) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2762) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:605) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:542) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:889) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:825) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:247) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:342) ~[?:?]
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:260) ~[mybatis-3.5.14.jar:3.5.14]
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:127) ~[mybatis-3.5.14.jar:3.5.14]
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.<init>(XMLMapperBuilder.java:85) ~[mybatis-3.5.14.jar:3.5.14]
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:697) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:189) ~[mybatis-spring-boot-autoconfigure-3.0.3.jar:3.0.3]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:146) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
2024-10-09 13:49:10.234 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-10-09 13:49:11.393 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-10-09 13:49:11.407 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-10-09 13:49:11.413 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2024-10-09 13:49:11.413 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-10-09 13:49:11.473 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-09 13:49:11.473 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1164 ms
2024-10-09 13:49:11.760 [main] WARN  org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'exchangeDateController': Unsatisfied dependency expressed through field 'exchangeRateService': Error creating bean with name 'exchangeRateService': Unsatisfied dependency expressed through field 'exchangeRateMapper': Error creating bean with name 'exchangeRateMapper' defined in file [D:\Code\Java\Bookkeeping\backend\target\classes\com\jngyen\bookkeeping\backend\mapper\ExchangeRateMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
2024-10-09 13:49:11.765 [main] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2024-10-09 13:49:11.779 [main] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-10-09 13:49:11.795 [main] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'exchangeDateController': Unsatisfied dependency expressed through field 'exchangeRateService': Error creating bean with name 'exchangeRateService': Unsatisfied dependency expressed through field 'exchangeRateMapper': Error creating bean with name 'exchangeRateMapper' defined in file [D:\Code\Java\Bookkeeping\backend\target\classes\com\jngyen\bookkeeping\backend\mapper\ExchangeRateMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971) ~[spring-context-6.1.13.jar:6.1.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) ~[spring-context-6.1.13.jar:6.1.13]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.3.4.jar:3.3.4]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.4.jar:3.3.4]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.4.jar:3.3.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.4.jar:3.3.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.4.jar:3.3.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.4.jar:3.3.4]
	at com.jngyen.bookkeeping.backend.BackendApplication.main(BackendApplication.java:10) [classes/:?]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'exchangeRateService': Unsatisfied dependency expressed through field 'exchangeRateMapper': Error creating bean with name 'exchangeRateMapper' defined in file [D:\Code\Java\Bookkeeping\backend\target\classes\com\jngyen\bookkeeping\backend\mapper\ExchangeRateMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'exchangeRateMapper' defined in file [D:\Code\Java\Bookkeeping\backend\target\classes\com\jngyen\bookkeeping\backend\mapper\ExchangeRateMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionTemplate' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionTemplate' parameter 0: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\Code\Java\Bookkeeping\backend\target\classes\mapper\UserConfig.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\Code\Java\Bookkeeping\backend\target\classes\mapper\UserConfig.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\Code\Java\Bookkeeping\backend\target\classes\mapper\UserConfig.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:178) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\Code\Java\Bookkeeping\backend\target\classes\mapper\UserConfig.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:189) ~[mybatis-spring-boot-autoconfigure-3.0.3.jar:3.0.3]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:146) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
Caused by: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 52; columnNumber: 5; XML 文档结构必须从头至尾包含在同一个实体内。
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:262) ~[mybatis-3.5.14.jar:3.5.14]
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:127) ~[mybatis-3.5.14.jar:3.5.14]
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.<init>(XMLMapperBuilder.java:85) ~[mybatis-3.5.14.jar:3.5.14]
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:697) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:189) ~[mybatis-spring-boot-autoconfigure-3.0.3.jar:3.0.3]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:146) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
Caused by: org.xml.sax.SAXParseException: XML 文档结构必须从头至尾包含在同一个实体内。
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:204) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:178) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1465) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.endEntity(XMLDocumentFragmentScannerImpl.java:943) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.endEntity(XMLDocumentScannerImpl.java:562) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLEntityManager.endEntity(XMLEntityManager.java:1504) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.load(XMLEntityScanner.java:1720) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.skipChar(XMLEntityScanner.java:1375) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2762) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:605) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:542) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:889) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:825) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:247) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:342) ~[?:?]
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:260) ~[mybatis-3.5.14.jar:3.5.14]
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:127) ~[mybatis-3.5.14.jar:3.5.14]
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.<init>(XMLMapperBuilder.java:85) ~[mybatis-3.5.14.jar:3.5.14]
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:697) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:189) ~[mybatis-spring-boot-autoconfigure-3.0.3.jar:3.0.3]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:146) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
2024-10-09 13:50:47.239 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-10-09 13:50:48.336 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-10-09 13:50:48.352 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-10-09 13:50:48.357 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2024-10-09 13:50:48.357 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-10-09 13:50:48.413 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-09 13:50:48.415 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1099 ms
2024-10-09 13:50:48.688 [main] WARN  org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'exchangeDateController': Unsatisfied dependency expressed through field 'exchangeRateService': Error creating bean with name 'exchangeRateService': Unsatisfied dependency expressed through field 'exchangeRateMapper': Error creating bean with name 'exchangeRateMapper' defined in file [D:\Code\Java\Bookkeeping\backend\target\classes\com\jngyen\bookkeeping\backend\mapper\ExchangeRateMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
2024-10-09 13:50:48.693 [main] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2024-10-09 13:50:48.709 [main] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-10-09 13:50:48.731 [main] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'exchangeDateController': Unsatisfied dependency expressed through field 'exchangeRateService': Error creating bean with name 'exchangeRateService': Unsatisfied dependency expressed through field 'exchangeRateMapper': Error creating bean with name 'exchangeRateMapper' defined in file [D:\Code\Java\Bookkeeping\backend\target\classes\com\jngyen\bookkeeping\backend\mapper\ExchangeRateMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971) ~[spring-context-6.1.13.jar:6.1.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) ~[spring-context-6.1.13.jar:6.1.13]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.3.4.jar:3.3.4]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.4.jar:3.3.4]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.4.jar:3.3.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.4.jar:3.3.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.4.jar:3.3.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.4.jar:3.3.4]
	at com.jngyen.bookkeeping.backend.BackendApplication.main(BackendApplication.java:10) [classes/:?]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'exchangeRateService': Unsatisfied dependency expressed through field 'exchangeRateMapper': Error creating bean with name 'exchangeRateMapper' defined in file [D:\Code\Java\Bookkeeping\backend\target\classes\com\jngyen\bookkeeping\backend\mapper\ExchangeRateMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'exchangeRateMapper' defined in file [D:\Code\Java\Bookkeeping\backend\target\classes\com\jngyen\bookkeeping\backend\mapper\ExchangeRateMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionTemplate' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionTemplate' parameter 0: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\Code\Java\Bookkeeping\backend\target\classes\mapper\UserConfig.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\Code\Java\Bookkeeping\backend\target\classes\mapper\UserConfig.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\Code\Java\Bookkeeping\backend\target\classes\mapper\UserConfig.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:178) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\Code\Java\Bookkeeping\backend\target\classes\mapper\UserConfig.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:189) ~[mybatis-spring-boot-autoconfigure-3.0.3.jar:3.0.3]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:146) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
Caused by: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 52; columnNumber: 5; XML 文档结构必须从头至尾包含在同一个实体内。
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:262) ~[mybatis-3.5.14.jar:3.5.14]
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:127) ~[mybatis-3.5.14.jar:3.5.14]
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.<init>(XMLMapperBuilder.java:85) ~[mybatis-3.5.14.jar:3.5.14]
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:697) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:189) ~[mybatis-spring-boot-autoconfigure-3.0.3.jar:3.0.3]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:146) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
Caused by: org.xml.sax.SAXParseException: XML 文档结构必须从头至尾包含在同一个实体内。
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:204) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:178) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1465) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.endEntity(XMLDocumentFragmentScannerImpl.java:943) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.endEntity(XMLDocumentScannerImpl.java:562) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLEntityManager.endEntity(XMLEntityManager.java:1504) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.load(XMLEntityScanner.java:1720) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.skipChar(XMLEntityScanner.java:1375) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2762) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:605) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:542) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:889) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:825) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:247) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:342) ~[?:?]
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:260) ~[mybatis-3.5.14.jar:3.5.14]
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:127) ~[mybatis-3.5.14.jar:3.5.14]
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.<init>(XMLMapperBuilder.java:85) ~[mybatis-3.5.14.jar:3.5.14]
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:697) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:189) ~[mybatis-spring-boot-autoconfigure-3.0.3.jar:3.0.3]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:146) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
2024-10-09 13:52:39.702 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-10-09 13:52:40.706 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-10-09 13:52:40.719 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-10-09 13:52:40.721 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2024-10-09 13:52:40.721 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-10-09 13:52:40.772 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-09 13:52:40.774 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 994 ms
2024-10-09 13:52:41.005 [main] WARN  org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'exchangeDateController': Unsatisfied dependency expressed through field 'exchangeRateService': Error creating bean with name 'exchangeRateService': Unsatisfied dependency expressed through field 'exchangeRateMapper': Error creating bean with name 'exchangeRateMapper' defined in file [D:\Code\Java\Bookkeeping\backend\target\classes\com\jngyen\bookkeeping\backend\mapper\ExchangeRateMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
2024-10-09 13:52:41.008 [main] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2024-10-09 13:52:41.018 [main] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-10-09 13:52:41.031 [main] ERROR org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'exchangeDateController': Unsatisfied dependency expressed through field 'exchangeRateService': Error creating bean with name 'exchangeRateService': Unsatisfied dependency expressed through field 'exchangeRateMapper': Error creating bean with name 'exchangeRateMapper' defined in file [D:\Code\Java\Bookkeeping\backend\target\classes\com\jngyen\bookkeeping\backend\mapper\ExchangeRateMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971) ~[spring-context-6.1.13.jar:6.1.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) ~[spring-context-6.1.13.jar:6.1.13]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.3.4.jar:3.3.4]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) [spring-boot-3.3.4.jar:3.3.4]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) [spring-boot-3.3.4.jar:3.3.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) [spring-boot-3.3.4.jar:3.3.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) [spring-boot-3.3.4.jar:3.3.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) [spring-boot-3.3.4.jar:3.3.4]
	at com.jngyen.bookkeeping.backend.BackendApplication.main(BackendApplication.java:10) [classes/:?]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'exchangeRateService': Unsatisfied dependency expressed through field 'exchangeRateMapper': Error creating bean with name 'exchangeRateMapper' defined in file [D:\Code\Java\Bookkeeping\backend\target\classes\com\jngyen\bookkeeping\backend\mapper\ExchangeRateMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:788) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'exchangeRateMapper' defined in file [D:\Code\Java\Bookkeeping\backend\target\classes\com\jngyen\bookkeeping\backend\mapper\ExchangeRateMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionTemplate' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionTemplate' parameter 0: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\Code\Java\Bookkeeping\backend\target\classes\mapper\UserConfig.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\Code\Java\Bookkeeping\backend\target\classes\mapper\UserConfig.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\Code\Java\Bookkeeping\backend\target\classes\mapper\UserConfig.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:178) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\Code\Java\Bookkeeping\backend\target\classes\mapper\UserConfig.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:189) ~[mybatis-spring-boot-autoconfigure-3.0.3.jar:3.0.3]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:146) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
Caused by: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 52; columnNumber: 5; XML 文档结构必须从头至尾包含在同一个实体内。
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:262) ~[mybatis-3.5.14.jar:3.5.14]
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:127) ~[mybatis-3.5.14.jar:3.5.14]
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.<init>(XMLMapperBuilder.java:85) ~[mybatis-3.5.14.jar:3.5.14]
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:697) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:189) ~[mybatis-spring-boot-autoconfigure-3.0.3.jar:3.0.3]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:146) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
Caused by: org.xml.sax.SAXParseException: XML 文档结构必须从头至尾包含在同一个实体内。
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:204) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:178) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1465) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.endEntity(XMLDocumentFragmentScannerImpl.java:943) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.endEntity(XMLDocumentScannerImpl.java:562) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLEntityManager.endEntity(XMLEntityManager.java:1504) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.load(XMLEntityScanner.java:1720) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLEntityScanner.skipChar(XMLEntityScanner.java:1375) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2762) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:605) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:542) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:889) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:825) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:247) ~[?:?]
	at java.xml/com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:342) ~[?:?]
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:260) ~[mybatis-3.5.14.jar:3.5.14]
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:127) ~[mybatis-3.5.14.jar:3.5.14]
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.<init>(XMLMapperBuilder.java:85) ~[mybatis-3.5.14.jar:3.5.14]
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:697) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:189) ~[mybatis-spring-boot-autoconfigure-3.0.3.jar:3.0.3]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:146) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.13.jar:6.1.13]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785) ~[spring-beans-6.1.13.jar:6.1.13]
	... 20 more
2024-10-09 14:01:17.435 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-10-09 14:01:18.504 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-10-09 14:01:18.517 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-10-09 14:01:18.522 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2024-10-09 14:01:18.522 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-10-09 14:01:18.574 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-09 14:01:18.577 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1067 ms
2024-10-09 14:01:19.350 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-10-09 14:01:19.375 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-10-09 14:02:07.756 [http-nio-8080-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-10-09 14:02:07.757 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-10-09 14:02:07.758 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-10-09 14:02:07.895 [http-nio-8080-exec-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-10-09 14:02:08.082 [http-nio-8080-exec-1] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4eb7f524
2024-10-09 14:02:08.084 [http-nio-8080-exec-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-10-09 14:02:08.092 [http-nio-8080-exec-1] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.getExchangeRate - ==>  Preparing: SELECT id, base_currency, target_currency, rate, gmt_create, gmt_modified FROM exchange_rate WHERE base_currency = ? AND target_currency = ?
2024-10-09 14:02:08.123 [http-nio-8080-exec-1] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.getExchangeRate - ==> Parameters: CNY(String), USD(String)
2024-10-09 14:02:08.152 [http-nio-8080-exec-1] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.getExchangeRate - <==      Total: 1
2024-10-09 14:02:09.259 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.263 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), CNY(String), 1(BigDecimal), 2024-10-09T14:02:09.257411100(LocalDateTime), 2024-10-09T14:02:09.257411100(LocalDateTime), 1(BigDecimal)
2024-10-09 14:02:09.286 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.286 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.288 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), CNY(String), 1(BigDecimal), 2024-10-09T14:02:09.286527200(LocalDateTime), 2024-10-09T14:02:09.286527200(LocalDateTime), 1(BigDecimal)
2024-10-09 14:02:09.296 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:02:09.296 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.298 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), AED(String), 0.5199(BigDecimal), 2024-10-09T14:02:09.296530(LocalDateTime), 2024-10-09T14:02:09.296530(LocalDateTime), 0.5199(BigDecimal)
2024-10-09 14:02:09.310 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.310 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.311 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), AED(String), CNY(String), 2(BigDecimal), 2024-10-09T14:02:09.310664400(LocalDateTime), 2024-10-09T14:02:09.310664400(LocalDateTime), 2(BigDecimal)
2024-10-09 14:02:09.325 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.327 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.328 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), AFN(String), 9.6548(BigDecimal), 2024-10-09T14:02:09.325888100(LocalDateTime), 2024-10-09T14:02:09.325888100(LocalDateTime), 9.6548(BigDecimal)
2024-10-09 14:02:09.342 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.343 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.344 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), AFN(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:09.343059(LocalDateTime), 2024-10-09T14:02:09.343059(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:09.356 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.356 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.357 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), ALL(String), 12.7469(BigDecimal), 2024-10-09T14:02:09.356580900(LocalDateTime), 2024-10-09T14:02:09.356580900(LocalDateTime), 12.7469(BigDecimal)
2024-10-09 14:02:09.370 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.370 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.372 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), ALL(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:09.370905700(LocalDateTime), 2024-10-09T14:02:09.370905700(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:09.387 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.388 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.389 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), AMD(String), 54.8411(BigDecimal), 2024-10-09T14:02:09.387245300(LocalDateTime), 2024-10-09T14:02:09.387245300(LocalDateTime), 54.8411(BigDecimal)
2024-10-09 14:02:09.402 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.403 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.404 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), AMD(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:09.403502500(LocalDateTime), 2024-10-09T14:02:09.403502500(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:09.418 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.418 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.420 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), ANG(String), 0.2534(BigDecimal), 2024-10-09T14:02:09.418394300(LocalDateTime), 2024-10-09T14:02:09.418394300(LocalDateTime), 0.2534(BigDecimal)
2024-10-09 14:02:09.433 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.434 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.434 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), ANG(String), CNY(String), 4(BigDecimal), 2024-10-09T14:02:09.433143300(LocalDateTime), 2024-10-09T14:02:09.433143300(LocalDateTime), 4(BigDecimal)
2024-10-09 14:02:09.447 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.448 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.448 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), AOA(String), 132.043(BigDecimal), 2024-10-09T14:02:09.447508800(LocalDateTime), 2024-10-09T14:02:09.447508800(LocalDateTime), 132.043(BigDecimal)
2024-10-09 14:02:09.461 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.462 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.463 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), AOA(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:09.462356200(LocalDateTime), 2024-10-09T14:02:09.462356200(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:09.483 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.483 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.484 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), ARS(String), 138.1647(BigDecimal), 2024-10-09T14:02:09.483675100(LocalDateTime), 2024-10-09T14:02:09.483675100(LocalDateTime), 138.1647(BigDecimal)
2024-10-09 14:02:09.488 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.488 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.489 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), ARS(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:09.488688600(LocalDateTime), 2024-10-09T14:02:09.488688600(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:09.493 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.494 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.495 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), AUD(String), 0.2102(BigDecimal), 2024-10-09T14:02:09.494568(LocalDateTime), 2024-10-09T14:02:09.494568(LocalDateTime), 0.2102(BigDecimal)
2024-10-09 14:02:09.499 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.499 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.501 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), AUD(String), CNY(String), 5(BigDecimal), 2024-10-09T14:02:09.499862200(LocalDateTime), 2024-10-09T14:02:09.499862200(LocalDateTime), 5(BigDecimal)
2024-10-09 14:02:09.504 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.505 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.505 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), AWG(String), 0.2534(BigDecimal), 2024-10-09T14:02:09.505804600(LocalDateTime), 2024-10-09T14:02:09.505804600(LocalDateTime), 0.2534(BigDecimal)
2024-10-09 14:02:09.509 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.511 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.511 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), AWG(String), CNY(String), 4(BigDecimal), 2024-10-09T14:02:09.509592700(LocalDateTime), 2024-10-09T14:02:09.509592700(LocalDateTime), 4(BigDecimal)
2024-10-09 14:02:09.515 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.516 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.517 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), AZN(String), 0.241(BigDecimal), 2024-10-09T14:02:09.516660800(LocalDateTime), 2024-10-09T14:02:09.516660800(LocalDateTime), 0.241(BigDecimal)
2024-10-09 14:02:09.520 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.521 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.521 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), AZN(String), CNY(String), 4(BigDecimal), 2024-10-09T14:02:09.521993400(LocalDateTime), 2024-10-09T14:02:09.521993400(LocalDateTime), 4(BigDecimal)
2024-10-09 14:02:09.526 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.526 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.527 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), BAM(String), 0.2522(BigDecimal), 2024-10-09T14:02:09.526560500(LocalDateTime), 2024-10-09T14:02:09.526560500(LocalDateTime), 0.2522(BigDecimal)
2024-10-09 14:02:09.531 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.531 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.532 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), BAM(String), CNY(String), 4(BigDecimal), 2024-10-09T14:02:09.531601400(LocalDateTime), 2024-10-09T14:02:09.531601400(LocalDateTime), 4(BigDecimal)
2024-10-09 14:02:09.536 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.536 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.537 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), BBD(String), 0.2831(BigDecimal), 2024-10-09T14:02:09.536850900(LocalDateTime), 2024-10-09T14:02:09.536850900(LocalDateTime), 0.2831(BigDecimal)
2024-10-09 14:02:09.541 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.542 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.543 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), BBD(String), CNY(String), 4(BigDecimal), 2024-10-09T14:02:09.542152600(LocalDateTime), 2024-10-09T14:02:09.542152600(LocalDateTime), 4(BigDecimal)
2024-10-09 14:02:09.547 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.548 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.548 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), BDT(String), 16.9033(BigDecimal), 2024-10-09T14:02:09.547539300(LocalDateTime), 2024-10-09T14:02:09.548542200(LocalDateTime), 16.9033(BigDecimal)
2024-10-09 14:02:09.553 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.553 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.554 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), BDT(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:09.553566800(LocalDateTime), 2024-10-09T14:02:09.553566800(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:09.558 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.558 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.559 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), BGN(String), 0.2522(BigDecimal), 2024-10-09T14:02:09.558252200(LocalDateTime), 2024-10-09T14:02:09.558252200(LocalDateTime), 0.2522(BigDecimal)
2024-10-09 14:02:09.563 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.563 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.565 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), BGN(String), CNY(String), 4(BigDecimal), 2024-10-09T14:02:09.563949400(LocalDateTime), 2024-10-09T14:02:09.563949400(LocalDateTime), 4(BigDecimal)
2024-10-09 14:02:09.568 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.569 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.570 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), BHD(String), 0.05323(BigDecimal), 2024-10-09T14:02:09.569353500(LocalDateTime), 2024-10-09T14:02:09.569353500(LocalDateTime), 0.05323(BigDecimal)
2024-10-09 14:02:09.573 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.574 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.575 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), BHD(String), CNY(String), 19(BigDecimal), 2024-10-09T14:02:09.574355100(LocalDateTime), 2024-10-09T14:02:09.574355100(LocalDateTime), 19(BigDecimal)
2024-10-09 14:02:09.580 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.580 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.581 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), BIF(String), 412.2476(BigDecimal), 2024-10-09T14:02:09.580355900(LocalDateTime), 2024-10-09T14:02:09.580355900(LocalDateTime), 412.2476(BigDecimal)
2024-10-09 14:02:09.585 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.585 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.586 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), BIF(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:09.585247200(LocalDateTime), 2024-10-09T14:02:09.585247200(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:09.590 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.591 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.591 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), BMD(String), 0.1416(BigDecimal), 2024-10-09T14:02:09.590303400(LocalDateTime), 2024-10-09T14:02:09.590303400(LocalDateTime), 0.1416(BigDecimal)
2024-10-09 14:02:09.597 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.597 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.598 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), BMD(String), CNY(String), 7(BigDecimal), 2024-10-09T14:02:09.597591600(LocalDateTime), 2024-10-09T14:02:09.597591600(LocalDateTime), 7(BigDecimal)
2024-10-09 14:02:09.602 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.604 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.604 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), BND(String), 0.1846(BigDecimal), 2024-10-09T14:02:09.602997600(LocalDateTime), 2024-10-09T14:02:09.602997600(LocalDateTime), 0.1846(BigDecimal)
2024-10-09 14:02:09.608 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.609 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.610 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), BND(String), CNY(String), 5(BigDecimal), 2024-10-09T14:02:09.609094600(LocalDateTime), 2024-10-09T14:02:09.609094600(LocalDateTime), 5(BigDecimal)
2024-10-09 14:02:09.614 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.614 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.616 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), BOB(String), 0.9823(BigDecimal), 2024-10-09T14:02:09.614782800(LocalDateTime), 2024-10-09T14:02:09.614782800(LocalDateTime), 0.9823(BigDecimal)
2024-10-09 14:02:09.619 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.619 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.620 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), BOB(String), CNY(String), 1(BigDecimal), 2024-10-09T14:02:09.619450500(LocalDateTime), 2024-10-09T14:02:09.619450500(LocalDateTime), 1(BigDecimal)
2024-10-09 14:02:09.624 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.625 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.626 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), BRL(String), 0.7791(BigDecimal), 2024-10-09T14:02:09.624554600(LocalDateTime), 2024-10-09T14:02:09.624554600(LocalDateTime), 0.7791(BigDecimal)
2024-10-09 14:02:09.630 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.631 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.631 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), BRL(String), CNY(String), 1(BigDecimal), 2024-10-09T14:02:09.631558(LocalDateTime), 2024-10-09T14:02:09.631558(LocalDateTime), 1(BigDecimal)
2024-10-09 14:02:09.635 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.636 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.636 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), BSD(String), 0.1416(BigDecimal), 2024-10-09T14:02:09.636331700(LocalDateTime), 2024-10-09T14:02:09.636331700(LocalDateTime), 0.1416(BigDecimal)
2024-10-09 14:02:09.640 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.640 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.641 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), BSD(String), CNY(String), 7(BigDecimal), 2024-10-09T14:02:09.640531200(LocalDateTime), 2024-10-09T14:02:09.640531200(LocalDateTime), 7(BigDecimal)
2024-10-09 14:02:09.645 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.646 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.647 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), BTN(String), 11.8988(BigDecimal), 2024-10-09T14:02:09.646918500(LocalDateTime), 2024-10-09T14:02:09.646918500(LocalDateTime), 11.8988(BigDecimal)
2024-10-09 14:02:09.651 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.651 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.653 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), BTN(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:09.651964900(LocalDateTime), 2024-10-09T14:02:09.651964900(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:09.657 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.657 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.659 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), BWP(String), 1.8879(BigDecimal), 2024-10-09T14:02:09.657259(LocalDateTime), 2024-10-09T14:02:09.657259(LocalDateTime), 1.8879(BigDecimal)
2024-10-09 14:02:09.663 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.663 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.664 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), BWP(String), CNY(String), 1(BigDecimal), 2024-10-09T14:02:09.663681100(LocalDateTime), 2024-10-09T14:02:09.663681100(LocalDateTime), 1(BigDecimal)
2024-10-09 14:02:09.667 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.667 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.668 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), BYN(String), 0.4636(BigDecimal), 2024-10-09T14:02:09.667991300(LocalDateTime), 2024-10-09T14:02:09.667991300(LocalDateTime), 0.4636(BigDecimal)
2024-10-09 14:02:09.672 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.673 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.673 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), BYN(String), CNY(String), 2(BigDecimal), 2024-10-09T14:02:09.672154(LocalDateTime), 2024-10-09T14:02:09.673184600(LocalDateTime), 2(BigDecimal)
2024-10-09 14:02:09.677 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.677 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.678 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), BZD(String), 0.2831(BigDecimal), 2024-10-09T14:02:09.677728300(LocalDateTime), 2024-10-09T14:02:09.677728300(LocalDateTime), 0.2831(BigDecimal)
2024-10-09 14:02:09.682 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.684 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.684 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), BZD(String), CNY(String), 4(BigDecimal), 2024-10-09T14:02:09.682615600(LocalDateTime), 2024-10-09T14:02:09.682615600(LocalDateTime), 4(BigDecimal)
2024-10-09 14:02:09.687 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.687 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.689 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), CAD(String), 0.1932(BigDecimal), 2024-10-09T14:02:09.687900900(LocalDateTime), 2024-10-09T14:02:09.687900900(LocalDateTime), 0.1932(BigDecimal)
2024-10-09 14:02:09.693 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.693 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.694 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CAD(String), CNY(String), 5(BigDecimal), 2024-10-09T14:02:09.693130800(LocalDateTime), 2024-10-09T14:02:09.693130800(LocalDateTime), 5(BigDecimal)
2024-10-09 14:02:09.697 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.697 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.699 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), CDF(String), 404.5421(BigDecimal), 2024-10-09T14:02:09.697982600(LocalDateTime), 2024-10-09T14:02:09.697982600(LocalDateTime), 404.5421(BigDecimal)
2024-10-09 14:02:09.703 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.703 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.704 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CDF(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:09.703663200(LocalDateTime), 2024-10-09T14:02:09.703663200(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:09.708 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.709 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.710 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), CHF(String), 0.1213(BigDecimal), 2024-10-09T14:02:09.709436500(LocalDateTime), 2024-10-09T14:02:09.709436500(LocalDateTime), 0.1213(BigDecimal)
2024-10-09 14:02:09.714 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.714 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.716 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CHF(String), CNY(String), 8(BigDecimal), 2024-10-09T14:02:09.714793100(LocalDateTime), 2024-10-09T14:02:09.714793100(LocalDateTime), 8(BigDecimal)
2024-10-09 14:02:09.719 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.719 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.720 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), CLP(String), 131.1125(BigDecimal), 2024-10-09T14:02:09.719409100(LocalDateTime), 2024-10-09T14:02:09.719409100(LocalDateTime), 131.1125(BigDecimal)
2024-10-09 14:02:09.724 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.725 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.727 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CLP(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:09.725620300(LocalDateTime), 2024-10-09T14:02:09.725620300(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:09.730 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.730 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.732 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), COP(String), 599.7058(BigDecimal), 2024-10-09T14:02:09.730881300(LocalDateTime), 2024-10-09T14:02:09.730881300(LocalDateTime), 599.7058(BigDecimal)
2024-10-09 14:02:09.735 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.736 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.736 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), COP(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:09.735624200(LocalDateTime), 2024-10-09T14:02:09.735624200(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:09.740 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.740 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.741 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), CRC(String), 73.525(BigDecimal), 2024-10-09T14:02:09.740568100(LocalDateTime), 2024-10-09T14:02:09.740568100(LocalDateTime), 73.525(BigDecimal)
2024-10-09 14:02:09.746 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.747 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.748 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CRC(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:09.747376600(LocalDateTime), 2024-10-09T14:02:09.747376600(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:09.751 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.751 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.753 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), CUP(String), 3.3978(BigDecimal), 2024-10-09T14:02:09.751677700(LocalDateTime), 2024-10-09T14:02:09.751677700(LocalDateTime), 3.3978(BigDecimal)
2024-10-09 14:02:09.756 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.757 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.757 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CUP(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:09.756342300(LocalDateTime), 2024-10-09T14:02:09.756342300(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:09.762 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.762 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.763 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), CVE(String), 14.2193(BigDecimal), 2024-10-09T14:02:09.762398200(LocalDateTime), 2024-10-09T14:02:09.762398200(LocalDateTime), 14.2193(BigDecimal)
2024-10-09 14:02:09.767 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.768 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.768 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CVE(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:09.767125200(LocalDateTime), 2024-10-09T14:02:09.767125200(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:09.771 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.772 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.772 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), CZK(String), 3.265(BigDecimal), 2024-10-09T14:02:09.771718400(LocalDateTime), 2024-10-09T14:02:09.771718400(LocalDateTime), 3.265(BigDecimal)
2024-10-09 14:02:09.777 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.777 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.778 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CZK(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:09.777370400(LocalDateTime), 2024-10-09T14:02:09.777370400(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:09.781 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.781 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.782 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), DJF(String), 25.1606(BigDecimal), 2024-10-09T14:02:09.781902800(LocalDateTime), 2024-10-09T14:02:09.781902800(LocalDateTime), 25.1606(BigDecimal)
2024-10-09 14:02:09.786 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.787 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.787 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), DJF(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:09.786640900(LocalDateTime), 2024-10-09T14:02:09.786640900(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:09.790 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.792 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.793 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), DKK(String), 0.9614(BigDecimal), 2024-10-09T14:02:09.792097300(LocalDateTime), 2024-10-09T14:02:09.792097300(LocalDateTime), 0.9614(BigDecimal)
2024-10-09 14:02:09.797 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.797 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.798 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), DKK(String), CNY(String), 1(BigDecimal), 2024-10-09T14:02:09.797377800(LocalDateTime), 2024-10-09T14:02:09.797377800(LocalDateTime), 1(BigDecimal)
2024-10-09 14:02:09.802 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.802 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.802 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), DOP(String), 8.539(BigDecimal), 2024-10-09T14:02:09.802121300(LocalDateTime), 2024-10-09T14:02:09.802121300(LocalDateTime), 8.539(BigDecimal)
2024-10-09 14:02:09.806 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.806 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.806 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), DOP(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:09.806800100(LocalDateTime), 2024-10-09T14:02:09.806800100(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:09.811 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.811 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.812 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), DZD(String), 18.8571(BigDecimal), 2024-10-09T14:02:09.811694400(LocalDateTime), 2024-10-09T14:02:09.811694400(LocalDateTime), 18.8571(BigDecimal)
2024-10-09 14:02:09.816 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.816 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.817 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), DZD(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:09.816853700(LocalDateTime), 2024-10-09T14:02:09.816853700(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:09.821 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.821 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.821 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), EGP(String), 6.8747(BigDecimal), 2024-10-09T14:02:09.821531800(LocalDateTime), 2024-10-09T14:02:09.821531800(LocalDateTime), 6.8747(BigDecimal)
2024-10-09 14:02:09.825 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.827 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.828 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EGP(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:09.825625500(LocalDateTime), 2024-10-09T14:02:09.825625500(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:09.831 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.831 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.833 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), ERN(String), 2.1236(BigDecimal), 2024-10-09T14:02:09.831856600(LocalDateTime), 2024-10-09T14:02:09.831856600(LocalDateTime), 2.1236(BigDecimal)
2024-10-09 14:02:09.836 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.836 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.836 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), ERN(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:09.836389600(LocalDateTime), 2024-10-09T14:02:09.836389600(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:09.840 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.840 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.841 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), ETB(String), 17.1906(BigDecimal), 2024-10-09T14:02:09.840851200(LocalDateTime), 2024-10-09T14:02:09.840851200(LocalDateTime), 17.1906(BigDecimal)
2024-10-09 14:02:09.846 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.846 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.847 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), ETB(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:09.846434900(LocalDateTime), 2024-10-09T14:02:09.846434900(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:09.851 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.851 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.852 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), EUR(String), 0.129(BigDecimal), 2024-10-09T14:02:09.851861600(LocalDateTime), 2024-10-09T14:02:09.851861600(LocalDateTime), 0.129(BigDecimal)
2024-10-09 14:02:09.856 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.856 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.857 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), CNY(String), 8(BigDecimal), 2024-10-09T14:02:09.856548700(LocalDateTime), 2024-10-09T14:02:09.856548700(LocalDateTime), 8(BigDecimal)
2024-10-09 14:02:09.861 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.862 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.862 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), FJD(String), 0.316(BigDecimal), 2024-10-09T14:02:09.862279100(LocalDateTime), 2024-10-09T14:02:09.862279100(LocalDateTime), 0.316(BigDecimal)
2024-10-09 14:02:09.866 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.866 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.866 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), FJD(String), CNY(String), 3(BigDecimal), 2024-10-09T14:02:09.866708500(LocalDateTime), 2024-10-09T14:02:09.866708500(LocalDateTime), 3(BigDecimal)
2024-10-09 14:02:09.870 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.870 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.871 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), FKP(String), 0.1081(BigDecimal), 2024-10-09T14:02:09.870841400(LocalDateTime), 2024-10-09T14:02:09.870841400(LocalDateTime), 0.1081(BigDecimal)
2024-10-09 14:02:09.875 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.875 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.876 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), FKP(String), CNY(String), 9(BigDecimal), 2024-10-09T14:02:09.875258(LocalDateTime), 2024-10-09T14:02:09.875258(LocalDateTime), 9(BigDecimal)
2024-10-09 14:02:09.880 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.880 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.881 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), FOK(String), 0.9614(BigDecimal), 2024-10-09T14:02:09.880629100(LocalDateTime), 2024-10-09T14:02:09.880629100(LocalDateTime), 0.9614(BigDecimal)
2024-10-09 14:02:09.884 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.884 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.886 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), FOK(String), CNY(String), 1(BigDecimal), 2024-10-09T14:02:09.884849400(LocalDateTime), 2024-10-09T14:02:09.884849400(LocalDateTime), 1(BigDecimal)
2024-10-09 14:02:09.889 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.889 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.889 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), GBP(String), 0.1081(BigDecimal), 2024-10-09T14:02:09.889823300(LocalDateTime), 2024-10-09T14:02:09.889823300(LocalDateTime), 0.1081(BigDecimal)
2024-10-09 14:02:09.894 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.894 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.895 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), GBP(String), CNY(String), 9(BigDecimal), 2024-10-09T14:02:09.894499900(LocalDateTime), 2024-10-09T14:02:09.894499900(LocalDateTime), 9(BigDecimal)
2024-10-09 14:02:09.899 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.899 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.899 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), GEL(String), 0.3875(BigDecimal), 2024-10-09T14:02:09.899614500(LocalDateTime), 2024-10-09T14:02:09.899614500(LocalDateTime), 0.3875(BigDecimal)
2024-10-09 14:02:09.903 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.903 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.903 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), GEL(String), CNY(String), 3(BigDecimal), 2024-10-09T14:02:09.903971200(LocalDateTime), 2024-10-09T14:02:09.903971200(LocalDateTime), 3(BigDecimal)
2024-10-09 14:02:09.907 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.908 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.909 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), GGP(String), 0.1081(BigDecimal), 2024-10-09T14:02:09.907517700(LocalDateTime), 2024-10-09T14:02:09.907517700(LocalDateTime), 0.1081(BigDecimal)
2024-10-09 14:02:09.912 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.914 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.914 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), GGP(String), CNY(String), 9(BigDecimal), 2024-10-09T14:02:09.912905800(LocalDateTime), 2024-10-09T14:02:09.912905800(LocalDateTime), 9(BigDecimal)
2024-10-09 14:02:09.918 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.918 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.919 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), GHS(String), 2.264(BigDecimal), 2024-10-09T14:02:09.918421800(LocalDateTime), 2024-10-09T14:02:09.918421800(LocalDateTime), 2.264(BigDecimal)
2024-10-09 14:02:09.923 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.923 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.924 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), GHS(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:09.923098400(LocalDateTime), 2024-10-09T14:02:09.923098400(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:09.928 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.928 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.929 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), GIP(String), 0.1081(BigDecimal), 2024-10-09T14:02:09.928125600(LocalDateTime), 2024-10-09T14:02:09.928125600(LocalDateTime), 0.1081(BigDecimal)
2024-10-09 14:02:09.933 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.933 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.935 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), GIP(String), CNY(String), 9(BigDecimal), 2024-10-09T14:02:09.933958400(LocalDateTime), 2024-10-09T14:02:09.933958400(LocalDateTime), 9(BigDecimal)
2024-10-09 14:02:09.938 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.938 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.939 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), GMD(String), 10.0169(BigDecimal), 2024-10-09T14:02:09.938702600(LocalDateTime), 2024-10-09T14:02:09.938702600(LocalDateTime), 10.0169(BigDecimal)
2024-10-09 14:02:09.943 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.943 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.944 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), GMD(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:09.943817200(LocalDateTime), 2024-10-09T14:02:09.943817200(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:09.948 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.948 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.948 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), GNF(String), 1228.9176(BigDecimal), 2024-10-09T14:02:09.948640600(LocalDateTime), 2024-10-09T14:02:09.948640600(LocalDateTime), 1228.9176(BigDecimal)
2024-10-09 14:02:09.953 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.953 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.953 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), GNF(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:09.953404900(LocalDateTime), 2024-10-09T14:02:09.953404900(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:09.958 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.959 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.959 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), GTQ(String), 1.0975(BigDecimal), 2024-10-09T14:02:09.958121100(LocalDateTime), 2024-10-09T14:02:09.958121100(LocalDateTime), 1.0975(BigDecimal)
2024-10-09 14:02:09.963 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.963 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.964 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), GTQ(String), CNY(String), 1(BigDecimal), 2024-10-09T14:02:09.963481900(LocalDateTime), 2024-10-09T14:02:09.963481900(LocalDateTime), 1(BigDecimal)
2024-10-09 14:02:09.968 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.968 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.969 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), GYD(String), 29.6074(BigDecimal), 2024-10-09T14:02:09.968224100(LocalDateTime), 2024-10-09T14:02:09.968224100(LocalDateTime), 29.6074(BigDecimal)
2024-10-09 14:02:09.972 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.972 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.973 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), GYD(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:09.972491700(LocalDateTime), 2024-10-09T14:02:09.972491700(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:09.977 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.977 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.978 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), HKD(String), 1.1012(BigDecimal), 2024-10-09T14:02:09.977693500(LocalDateTime), 2024-10-09T14:02:09.977693500(LocalDateTime), 1.1012(BigDecimal)
2024-10-09 14:02:09.982 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.983 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.983 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), HKD(String), CNY(String), 1(BigDecimal), 2024-10-09T14:02:09.982213(LocalDateTime), 2024-10-09T14:02:09.982213(LocalDateTime), 1(BigDecimal)
2024-10-09 14:02:09.986 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.987 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.987 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), HNL(String), 3.5265(BigDecimal), 2024-10-09T14:02:09.986222400(LocalDateTime), 2024-10-09T14:02:09.987704800(LocalDateTime), 3.5265(BigDecimal)
2024-10-09 14:02:09.992 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.993 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.993 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), HNL(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:09.992233(LocalDateTime), 2024-10-09T14:02:09.992233(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:09.997 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:09.997 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:09.997 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), HRK(String), 0.9716(BigDecimal), 2024-10-09T14:02:09.997655500(LocalDateTime), 2024-10-09T14:02:09.997655500(LocalDateTime), 0.9716(BigDecimal)
2024-10-09 14:02:10.001 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.001 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.001 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), HRK(String), CNY(String), 1(BigDecimal), 2024-10-09T14:02:10.001950300(LocalDateTime), 2024-10-09T14:02:10.001950300(LocalDateTime), 1(BigDecimal)
2024-10-09 14:02:10.005 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.005 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.006 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), HTG(String), 18.6578(BigDecimal), 2024-10-09T14:02:10.005897500(LocalDateTime), 2024-10-09T14:02:10.005897500(LocalDateTime), 18.6578(BigDecimal)
2024-10-09 14:02:10.010 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.011 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.012 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), HTG(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.011366600(LocalDateTime), 2024-10-09T14:02:10.011366600(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.015 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.016 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.016 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), HUF(String), 51.6224(BigDecimal), 2024-10-09T14:02:10.016575(LocalDateTime), 2024-10-09T14:02:10.016575(LocalDateTime), 51.6224(BigDecimal)
2024-10-09 14:02:10.020 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.020 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.020 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), HUF(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.020851(LocalDateTime), 2024-10-09T14:02:10.020851(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.025 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.025 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.026 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), IDR(String), 2218.4514(BigDecimal), 2024-10-09T14:02:10.025457100(LocalDateTime), 2024-10-09T14:02:10.025457100(LocalDateTime), 2218.4514(BigDecimal)
2024-10-09 14:02:10.030 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.030 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.031 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), IDR(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.030930500(LocalDateTime), 2024-10-09T14:02:10.030930500(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.035 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.035 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.035 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), ILS(String), 0.5359(BigDecimal), 2024-10-09T14:02:10.035536900(LocalDateTime), 2024-10-09T14:02:10.035536900(LocalDateTime), 0.5359(BigDecimal)
2024-10-09 14:02:10.039 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.039 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.041 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), ILS(String), CNY(String), 2(BigDecimal), 2024-10-09T14:02:10.039746600(LocalDateTime), 2024-10-09T14:02:10.039746600(LocalDateTime), 2(BigDecimal)
2024-10-09 14:02:10.044 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.044 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.045 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), IMP(String), 0.1081(BigDecimal), 2024-10-09T14:02:10.044758700(LocalDateTime), 2024-10-09T14:02:10.044758700(LocalDateTime), 0.1081(BigDecimal)
2024-10-09 14:02:10.050 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.050 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.051 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), IMP(String), CNY(String), 9(BigDecimal), 2024-10-09T14:02:10.050033500(LocalDateTime), 2024-10-09T14:02:10.050033500(LocalDateTime), 9(BigDecimal)
2024-10-09 14:02:10.054 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.054 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.055 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), INR(String), 11.8997(BigDecimal), 2024-10-09T14:02:10.054246300(LocalDateTime), 2024-10-09T14:02:10.054246300(LocalDateTime), 11.8997(BigDecimal)
2024-10-09 14:02:10.060 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.061 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.062 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), INR(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.061803500(LocalDateTime), 2024-10-09T14:02:10.061803500(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.067 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.067 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.068 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), IQD(String), 185.7768(BigDecimal), 2024-10-09T14:02:10.067649900(LocalDateTime), 2024-10-09T14:02:10.067649900(LocalDateTime), 185.7768(BigDecimal)
2024-10-09 14:02:10.071 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.072 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.072 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), IQD(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.072246700(LocalDateTime), 2024-10-09T14:02:10.072246700(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.075 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.075 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.077 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), IRR(String), 6023.7817(BigDecimal), 2024-10-09T14:02:10.075929500(LocalDateTime), 2024-10-09T14:02:10.075929500(LocalDateTime), 6023.7817(BigDecimal)
2024-10-09 14:02:10.080 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.080 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.081 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), IRR(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.080738800(LocalDateTime), 2024-10-09T14:02:10.080738800(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.085 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.085 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.086 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), ISK(String), 19.1562(BigDecimal), 2024-10-09T14:02:10.085338200(LocalDateTime), 2024-10-09T14:02:10.085338200(LocalDateTime), 19.1562(BigDecimal)
2024-10-09 14:02:10.089 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.089 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.089 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), ISK(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.089738(LocalDateTime), 2024-10-09T14:02:10.089738(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.094 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.094 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.095 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), JEP(String), 0.1081(BigDecimal), 2024-10-09T14:02:10.094504700(LocalDateTime), 2024-10-09T14:02:10.094504700(LocalDateTime), 0.1081(BigDecimal)
2024-10-09 14:02:10.098 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.098 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.098 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), JEP(String), CNY(String), 9(BigDecimal), 2024-10-09T14:02:10.098718300(LocalDateTime), 2024-10-09T14:02:10.098718300(LocalDateTime), 9(BigDecimal)
2024-10-09 14:02:10.102 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.102 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.103 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), JMD(String), 22.4125(BigDecimal), 2024-10-09T14:02:10.102796400(LocalDateTime), 2024-10-09T14:02:10.102796400(LocalDateTime), 22.4125(BigDecimal)
2024-10-09 14:02:10.107 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.107 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.107 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), JMD(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.107111700(LocalDateTime), 2024-10-09T14:02:10.107111700(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.111 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.112 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.112 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), JOD(String), 0.1004(BigDecimal), 2024-10-09T14:02:10.112867100(LocalDateTime), 2024-10-09T14:02:10.112867100(LocalDateTime), 0.1004(BigDecimal)
2024-10-09 14:02:10.117 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.117 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.117 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), JOD(String), CNY(String), 10(BigDecimal), 2024-10-09T14:02:10.117227200(LocalDateTime), 2024-10-09T14:02:10.117227200(LocalDateTime), 10(BigDecimal)
2024-10-09 14:02:10.121 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.121 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.122 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), JPY(String), 20.9692(BigDecimal), 2024-10-09T14:02:10.121477(LocalDateTime), 2024-10-09T14:02:10.121477(LocalDateTime), 20.9692(BigDecimal)
2024-10-09 14:02:10.125 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.126 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.127 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), JPY(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.126277600(LocalDateTime), 2024-10-09T14:02:10.126277600(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.130 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.131 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.131 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), KES(String), 18.2916(BigDecimal), 2024-10-09T14:02:10.130538500(LocalDateTime), 2024-10-09T14:02:10.130538500(LocalDateTime), 18.2916(BigDecimal)
2024-10-09 14:02:10.134 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.135 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.135 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), KES(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.135047(LocalDateTime), 2024-10-09T14:02:10.135047(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.139 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.139 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.139 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), KGS(String), 11.971(BigDecimal), 2024-10-09T14:02:10.139529100(LocalDateTime), 2024-10-09T14:02:10.139529100(LocalDateTime), 11.971(BigDecimal)
2024-10-09 14:02:10.142 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.144 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.144 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), KGS(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.144185900(LocalDateTime), 2024-10-09T14:02:10.144185900(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.147 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.148 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.148 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), KHR(String), 577.1467(BigDecimal), 2024-10-09T14:02:10.147868400(LocalDateTime), 2024-10-09T14:02:10.147868400(LocalDateTime), 577.1467(BigDecimal)
2024-10-09 14:02:10.152 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.152 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.152 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), KHR(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.152346200(LocalDateTime), 2024-10-09T14:02:10.152346200(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.156 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.156 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.157 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), KID(String), 0.2102(BigDecimal), 2024-10-09T14:02:10.156775600(LocalDateTime), 2024-10-09T14:02:10.156775600(LocalDateTime), 0.2102(BigDecimal)
2024-10-09 14:02:10.162 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.162 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.163 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), KID(String), CNY(String), 5(BigDecimal), 2024-10-09T14:02:10.162052(LocalDateTime), 2024-10-09T14:02:10.162052(LocalDateTime), 5(BigDecimal)
2024-10-09 14:02:10.166 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.166 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.167 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), KMF(String), 63.442(BigDecimal), 2024-10-09T14:02:10.166126600(LocalDateTime), 2024-10-09T14:02:10.166126600(LocalDateTime), 63.442(BigDecimal)
2024-10-09 14:02:10.170 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.171 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.171 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), KMF(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.170816200(LocalDateTime), 2024-10-09T14:02:10.170816200(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.174 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.175 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.176 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), KRW(String), 190.8008(BigDecimal), 2024-10-09T14:02:10.175344400(LocalDateTime), 2024-10-09T14:02:10.175344400(LocalDateTime), 190.8008(BigDecimal)
2024-10-09 14:02:10.180 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.180 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.180 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), KRW(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.180130600(LocalDateTime), 2024-10-09T14:02:10.180130600(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.184 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.184 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.184 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), KWD(String), 0.04311(BigDecimal), 2024-10-09T14:02:10.184331200(LocalDateTime), 2024-10-09T14:02:10.184331200(LocalDateTime), 0.04311(BigDecimal)
2024-10-09 14:02:10.188 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.188 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.188 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), KWD(String), CNY(String), 23(BigDecimal), 2024-10-09T14:02:10.188423600(LocalDateTime), 2024-10-09T14:02:10.188423600(LocalDateTime), 23(BigDecimal)
2024-10-09 14:02:10.191 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.193 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.193 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), KYD(String), 0.118(BigDecimal), 2024-10-09T14:02:10.193359500(LocalDateTime), 2024-10-09T14:02:10.193359500(LocalDateTime), 0.118(BigDecimal)
2024-10-09 14:02:10.197 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.197 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.197 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), KYD(String), CNY(String), 8(BigDecimal), 2024-10-09T14:02:10.197496200(LocalDateTime), 2024-10-09T14:02:10.197496200(LocalDateTime), 8(BigDecimal)
2024-10-09 14:02:10.201 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.201 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.201 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), KZT(String), 68.9985(BigDecimal), 2024-10-09T14:02:10.201562200(LocalDateTime), 2024-10-09T14:02:10.201562200(LocalDateTime), 68.9985(BigDecimal)
2024-10-09 14:02:10.205 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.205 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.205 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), KZT(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.205556700(LocalDateTime), 2024-10-09T14:02:10.205556700(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.209 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.209 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.210 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), LAK(String), 3113.0466(BigDecimal), 2024-10-09T14:02:10.209650600(LocalDateTime), 2024-10-09T14:02:10.209650600(LocalDateTime), 3113.0466(BigDecimal)
2024-10-09 14:02:10.214 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.214 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.214 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), LAK(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.214360800(LocalDateTime), 2024-10-09T14:02:10.214360800(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.218 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.218 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.218 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), LBP(String), 12670.8582(BigDecimal), 2024-10-09T14:02:10.218623(LocalDateTime), 2024-10-09T14:02:10.218623(LocalDateTime), 12670.8582(BigDecimal)
2024-10-09 14:02:10.223 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.223 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.224 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), LBP(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.223023100(LocalDateTime), 2024-10-09T14:02:10.223023100(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.227 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.227 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.228 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), LKR(String), 41.5677(BigDecimal), 2024-10-09T14:02:10.227445900(LocalDateTime), 2024-10-09T14:02:10.227445900(LocalDateTime), 41.5677(BigDecimal)
2024-10-09 14:02:10.232 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.232 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.233 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), LKR(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.232454400(LocalDateTime), 2024-10-09T14:02:10.232454400(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.237 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.237 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.237 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), LRD(String), 27.3571(BigDecimal), 2024-10-09T14:02:10.237076(LocalDateTime), 2024-10-09T14:02:10.237076(LocalDateTime), 27.3571(BigDecimal)
2024-10-09 14:02:10.240 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.241 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.242 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), LRD(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.241405300(LocalDateTime), 2024-10-09T14:02:10.241405300(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.246 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.246 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.246 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), LSL(String), 2.4834(BigDecimal), 2024-10-09T14:02:10.246416500(LocalDateTime), 2024-10-09T14:02:10.246416500(LocalDateTime), 2.4834(BigDecimal)
2024-10-09 14:02:10.250 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.250 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.251 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), LSL(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.250620600(LocalDateTime), 2024-10-09T14:02:10.250620600(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.255 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.255 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.256 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), LYD(String), 0.6772(BigDecimal), 2024-10-09T14:02:10.255452600(LocalDateTime), 2024-10-09T14:02:10.255452600(LocalDateTime), 0.6772(BigDecimal)
2024-10-09 14:02:10.259 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.259 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.261 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), LYD(String), CNY(String), 1(BigDecimal), 2024-10-09T14:02:10.259751500(LocalDateTime), 2024-10-09T14:02:10.259751500(LocalDateTime), 1(BigDecimal)
2024-10-09 14:02:10.264 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.265 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.265 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), MAD(String), 1.3897(BigDecimal), 2024-10-09T14:02:10.264740500(LocalDateTime), 2024-10-09T14:02:10.265295400(LocalDateTime), 1.3897(BigDecimal)
2024-10-09 14:02:10.269 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.269 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.269 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), MAD(String), CNY(String), 1(BigDecimal), 2024-10-09T14:02:10.269101100(LocalDateTime), 2024-10-09T14:02:10.269101100(LocalDateTime), 1(BigDecimal)
2024-10-09 14:02:10.272 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.272 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.273 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), MDL(String), 2.4904(BigDecimal), 2024-10-09T14:02:10.272772700(LocalDateTime), 2024-10-09T14:02:10.272772700(LocalDateTime), 2.4904(BigDecimal)
2024-10-09 14:02:10.277 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.277 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.278 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), MDL(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.277801500(LocalDateTime), 2024-10-09T14:02:10.277801500(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.283 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.283 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.283 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), MGA(String), 646.0597(BigDecimal), 2024-10-09T14:02:10.283625600(LocalDateTime), 2024-10-09T14:02:10.283625600(LocalDateTime), 646.0597(BigDecimal)
2024-10-09 14:02:10.287 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.287 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.287 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), MGA(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.287969700(LocalDateTime), 2024-10-09T14:02:10.287969700(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.292 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.292 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.293 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), MKD(String), 7.9268(BigDecimal), 2024-10-09T14:02:10.292464400(LocalDateTime), 2024-10-09T14:02:10.292464400(LocalDateTime), 7.9268(BigDecimal)
2024-10-09 14:02:10.297 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.298 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.299 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), MKD(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.298560400(LocalDateTime), 2024-10-09T14:02:10.298560400(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.302 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.303 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.303 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), MMK(String), 406.8464(BigDecimal), 2024-10-09T14:02:10.303595600(LocalDateTime), 2024-10-09T14:02:10.303595600(LocalDateTime), 406.8464(BigDecimal)
2024-10-09 14:02:10.307 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.309 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.310 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), MMK(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.309026800(LocalDateTime), 2024-10-09T14:02:10.309026800(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.314 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.314 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.315 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), MNT(String), 477.4224(BigDecimal), 2024-10-09T14:02:10.314299900(LocalDateTime), 2024-10-09T14:02:10.314299900(LocalDateTime), 477.4224(BigDecimal)
2024-10-09 14:02:10.319 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.319 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.320 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), MNT(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.319507600(LocalDateTime), 2024-10-09T14:02:10.319507600(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.325 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.325 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.326 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), MOP(String), 1.1342(BigDecimal), 2024-10-09T14:02:10.325636(LocalDateTime), 2024-10-09T14:02:10.325636(LocalDateTime), 1.1342(BigDecimal)
2024-10-09 14:02:10.331 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.331 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.332 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), MOP(String), CNY(String), 1(BigDecimal), 2024-10-09T14:02:10.331611300(LocalDateTime), 2024-10-09T14:02:10.331611300(LocalDateTime), 1(BigDecimal)
2024-10-09 14:02:10.336 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.336 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.337 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), MRU(String), 5.5947(BigDecimal), 2024-10-09T14:02:10.336845700(LocalDateTime), 2024-10-09T14:02:10.336845700(LocalDateTime), 5.5947(BigDecimal)
2024-10-09 14:02:10.340 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.341 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.341 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), MRU(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.341856500(LocalDateTime), 2024-10-09T14:02:10.341856500(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.346 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.346 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.347 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), MUR(String), 6.5858(BigDecimal), 2024-10-09T14:02:10.346876600(LocalDateTime), 2024-10-09T14:02:10.346876600(LocalDateTime), 6.5858(BigDecimal)
2024-10-09 14:02:10.351 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.351 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.351 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), MUR(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.351358(LocalDateTime), 2024-10-09T14:02:10.351358(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.355 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.356 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.356 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), MVR(String), 2.1884(BigDecimal), 2024-10-09T14:02:10.356258200(LocalDateTime), 2024-10-09T14:02:10.356258200(LocalDateTime), 2.1884(BigDecimal)
2024-10-09 14:02:10.360 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.360 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.362 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), MVR(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.360728700(LocalDateTime), 2024-10-09T14:02:10.360728700(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.366 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.366 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.367 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), MWK(String), 247.1517(BigDecimal), 2024-10-09T14:02:10.366113200(LocalDateTime), 2024-10-09T14:02:10.366113200(LocalDateTime), 247.1517(BigDecimal)
2024-10-09 14:02:10.371 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.371 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.372 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), MWK(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.371091400(LocalDateTime), 2024-10-09T14:02:10.371091400(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.374 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.375 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.376 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), MXN(String), 2.737(BigDecimal), 2024-10-09T14:02:10.375852400(LocalDateTime), 2024-10-09T14:02:10.375852400(LocalDateTime), 2.737(BigDecimal)
2024-10-09 14:02:10.381 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.381 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.382 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), MXN(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.381040200(LocalDateTime), 2024-10-09T14:02:10.381040200(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.385 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.386 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.386 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), MYR(String), 0.6072(BigDecimal), 2024-10-09T14:02:10.385058700(LocalDateTime), 2024-10-09T14:02:10.385058700(LocalDateTime), 0.6072(BigDecimal)
2024-10-09 14:02:10.390 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.390 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.390 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), MYR(String), CNY(String), 2(BigDecimal), 2024-10-09T14:02:10.390090200(LocalDateTime), 2024-10-09T14:02:10.390090200(LocalDateTime), 2(BigDecimal)
2024-10-09 14:02:10.394 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.394 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.395 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), MZN(String), 9.053(BigDecimal), 2024-10-09T14:02:10.394118200(LocalDateTime), 2024-10-09T14:02:10.394118200(LocalDateTime), 9.053(BigDecimal)
2024-10-09 14:02:10.399 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.399 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.400 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), MZN(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.399075600(LocalDateTime), 2024-10-09T14:02:10.399075600(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.403 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.403 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.403 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), NAD(String), 2.4834(BigDecimal), 2024-10-09T14:02:10.403454200(LocalDateTime), 2024-10-09T14:02:10.403454200(LocalDateTime), 2.4834(BigDecimal)
2024-10-09 14:02:10.407 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.407 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.407 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), NAD(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.407201300(LocalDateTime), 2024-10-09T14:02:10.407201300(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.411 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.412 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.412 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), NGN(String), 230.9104(BigDecimal), 2024-10-09T14:02:10.412837200(LocalDateTime), 2024-10-09T14:02:10.412837200(LocalDateTime), 230.9104(BigDecimal)
2024-10-09 14:02:10.417 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.417 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.418 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), NGN(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.417227500(LocalDateTime), 2024-10-09T14:02:10.417227500(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.421 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.421 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.422 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), NIO(String), 5.2156(BigDecimal), 2024-10-09T14:02:10.421815100(LocalDateTime), 2024-10-09T14:02:10.421815100(LocalDateTime), 5.2156(BigDecimal)
2024-10-09 14:02:10.426 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.426 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.427 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), NIO(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.426355100(LocalDateTime), 2024-10-09T14:02:10.426355100(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.430 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.430 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.430 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), NOK(String), 1.5107(BigDecimal), 2024-10-09T14:02:10.430821500(LocalDateTime), 2024-10-09T14:02:10.430821500(LocalDateTime), 1.5107(BigDecimal)
2024-10-09 14:02:10.435 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.435 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.435 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), NOK(String), CNY(String), 1(BigDecimal), 2024-10-09T14:02:10.435094300(LocalDateTime), 2024-10-09T14:02:10.435094300(LocalDateTime), 1(BigDecimal)
2024-10-09 14:02:10.439 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.439 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.439 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), NPR(String), 19.038(BigDecimal), 2024-10-09T14:02:10.439023900(LocalDateTime), 2024-10-09T14:02:10.439023900(LocalDateTime), 19.038(BigDecimal)
2024-10-09 14:02:10.442 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.442 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.442 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), NPR(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.442912900(LocalDateTime), 2024-10-09T14:02:10.442912900(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.447 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.447 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.447 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), NZD(String), 0.2313(BigDecimal), 2024-10-09T14:02:10.447599200(LocalDateTime), 2024-10-09T14:02:10.447599200(LocalDateTime), 0.2313(BigDecimal)
2024-10-09 14:02:10.451 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.451 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.452 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), NZD(String), CNY(String), 4(BigDecimal), 2024-10-09T14:02:10.451733(LocalDateTime), 2024-10-09T14:02:10.451733(LocalDateTime), 4(BigDecimal)
2024-10-09 14:02:10.455 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.455 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.456 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), OMR(String), 0.05443(BigDecimal), 2024-10-09T14:02:10.455761100(LocalDateTime), 2024-10-09T14:02:10.455761100(LocalDateTime), 0.05443(BigDecimal)
2024-10-09 14:02:10.459 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.460 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.460 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), OMR(String), CNY(String), 18(BigDecimal), 2024-10-09T14:02:10.460783500(LocalDateTime), 2024-10-09T14:02:10.460783500(LocalDateTime), 18(BigDecimal)
2024-10-09 14:02:10.464 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.465 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.465 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), PAB(String), 0.1416(BigDecimal), 2024-10-09T14:02:10.465519700(LocalDateTime), 2024-10-09T14:02:10.465519700(LocalDateTime), 0.1416(BigDecimal)
2024-10-09 14:02:10.469 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.469 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.470 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), PAB(String), CNY(String), 7(BigDecimal), 2024-10-09T14:02:10.469395600(LocalDateTime), 2024-10-09T14:02:10.469395600(LocalDateTime), 7(BigDecimal)
2024-10-09 14:02:10.473 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.473 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.473 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), PEN(String), 0.5279(BigDecimal), 2024-10-09T14:02:10.473662700(LocalDateTime), 2024-10-09T14:02:10.473662700(LocalDateTime), 0.5279(BigDecimal)
2024-10-09 14:02:10.478 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.478 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.479 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), PEN(String), CNY(String), 2(BigDecimal), 2024-10-09T14:02:10.478109500(LocalDateTime), 2024-10-09T14:02:10.478109500(LocalDateTime), 2(BigDecimal)
2024-10-09 14:02:10.482 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.482 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.482 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), PGK(String), 0.5586(BigDecimal), 2024-10-09T14:02:10.482992400(LocalDateTime), 2024-10-09T14:02:10.482992400(LocalDateTime), 0.5586(BigDecimal)
2024-10-09 14:02:10.487 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.487 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.487 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), PGK(String), CNY(String), 2(BigDecimal), 2024-10-09T14:02:10.487042900(LocalDateTime), 2024-10-09T14:02:10.487042900(LocalDateTime), 2(BigDecimal)
2024-10-09 14:02:10.491 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.491 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.492 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), PHP(String), 8.0488(BigDecimal), 2024-10-09T14:02:10.491196300(LocalDateTime), 2024-10-09T14:02:10.491196300(LocalDateTime), 8.0488(BigDecimal)
2024-10-09 14:02:10.495 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.496 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.496 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), PHP(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.496466100(LocalDateTime), 2024-10-09T14:02:10.496466100(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.500 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.500 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.500 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), PKR(String), 39.3335(BigDecimal), 2024-10-09T14:02:10.500447300(LocalDateTime), 2024-10-09T14:02:10.500447300(LocalDateTime), 39.3335(BigDecimal)
2024-10-09 14:02:10.503 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.503 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.505 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), PKR(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.503539800(LocalDateTime), 2024-10-09T14:02:10.503539800(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.509 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.509 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.510 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), PLN(String), 0.5557(BigDecimal), 2024-10-09T14:02:10.509370(LocalDateTime), 2024-10-09T14:02:10.509370(LocalDateTime), 0.5557(BigDecimal)
2024-10-09 14:02:10.514 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.514 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.514 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), PLN(String), CNY(String), 2(BigDecimal), 2024-10-09T14:02:10.514091200(LocalDateTime), 2024-10-09T14:02:10.514091200(LocalDateTime), 2(BigDecimal)
2024-10-09 14:02:10.518 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.518 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.519 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), PYG(String), 1109.3186(BigDecimal), 2024-10-09T14:02:10.518128(LocalDateTime), 2024-10-09T14:02:10.518128(LocalDateTime), 1109.3186(BigDecimal)
2024-10-09 14:02:10.522 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.522 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.523 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), PYG(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.522400700(LocalDateTime), 2024-10-09T14:02:10.522400700(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.527 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.527 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.528 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), QAR(String), 0.5153(BigDecimal), 2024-10-09T14:02:10.527810200(LocalDateTime), 2024-10-09T14:02:10.527810200(LocalDateTime), 0.5153(BigDecimal)
2024-10-09 14:02:10.532 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.532 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.532 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), QAR(String), CNY(String), 2(BigDecimal), 2024-10-09T14:02:10.532364800(LocalDateTime), 2024-10-09T14:02:10.532364800(LocalDateTime), 2(BigDecimal)
2024-10-09 14:02:10.536 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.536 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.537 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), RON(String), 0.6425(BigDecimal), 2024-10-09T14:02:10.536628800(LocalDateTime), 2024-10-09T14:02:10.536628800(LocalDateTime), 0.6425(BigDecimal)
2024-10-09 14:02:10.540 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.540 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.541 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), RON(String), CNY(String), 2(BigDecimal), 2024-10-09T14:02:10.540849700(LocalDateTime), 2024-10-09T14:02:10.540849700(LocalDateTime), 2(BigDecimal)
2024-10-09 14:02:10.545 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.545 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.546 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), RSD(String), 15.1029(BigDecimal), 2024-10-09T14:02:10.545950400(LocalDateTime), 2024-10-09T14:02:10.545950400(LocalDateTime), 15.1029(BigDecimal)
2024-10-09 14:02:10.550 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.550 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.551 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), RSD(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.550775200(LocalDateTime), 2024-10-09T14:02:10.550775200(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.555 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.555 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.555 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), RUB(String), 13.6281(BigDecimal), 2024-10-09T14:02:10.555166400(LocalDateTime), 2024-10-09T14:02:10.555166400(LocalDateTime), 13.6281(BigDecimal)
2024-10-09 14:02:10.559 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.560 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.560 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), RUB(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.560559100(LocalDateTime), 2024-10-09T14:02:10.560559100(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.564 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.564 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.565 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), RWF(String), 196.7677(BigDecimal), 2024-10-09T14:02:10.564911700(LocalDateTime), 2024-10-09T14:02:10.564911700(LocalDateTime), 196.7677(BigDecimal)
2024-10-09 14:02:10.569 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.569 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.569 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), RWF(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.569114700(LocalDateTime), 2024-10-09T14:02:10.569114700(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.573 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.573 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.573 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), SAR(String), 0.5309(BigDecimal), 2024-10-09T14:02:10.573525400(LocalDateTime), 2024-10-09T14:02:10.573525400(LocalDateTime), 0.5309(BigDecimal)
2024-10-09 14:02:10.578 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.579 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.579 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), SAR(String), CNY(String), 2(BigDecimal), 2024-10-09T14:02:10.579165(LocalDateTime), 2024-10-09T14:02:10.579165(LocalDateTime), 2(BigDecimal)
2024-10-09 14:02:10.583 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.583 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.583 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), SBD(String), 1.1969(BigDecimal), 2024-10-09T14:02:10.583228600(LocalDateTime), 2024-10-09T14:02:10.583228600(LocalDateTime), 1.1969(BigDecimal)
2024-10-09 14:02:10.586 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.586 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.587 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), SBD(String), CNY(String), 1(BigDecimal), 2024-10-09T14:02:10.586735100(LocalDateTime), 2024-10-09T14:02:10.586735100(LocalDateTime), 1(BigDecimal)
2024-10-09 14:02:10.590 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.592 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.592 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), SCR(String), 1.9687(BigDecimal), 2024-10-09T14:02:10.591848400(LocalDateTime), 2024-10-09T14:02:10.591848400(LocalDateTime), 1.9687(BigDecimal)
2024-10-09 14:02:10.596 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.596 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.597 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), SCR(String), CNY(String), 1(BigDecimal), 2024-10-09T14:02:10.596721900(LocalDateTime), 2024-10-09T14:02:10.596721900(LocalDateTime), 1(BigDecimal)
2024-10-09 14:02:10.601 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.601 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.601 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), SDG(String), 63.2836(BigDecimal), 2024-10-09T14:02:10.601218600(LocalDateTime), 2024-10-09T14:02:10.601218600(LocalDateTime), 63.2836(BigDecimal)
2024-10-09 14:02:10.604 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.605 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.605 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), SDG(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.604874(LocalDateTime), 2024-10-09T14:02:10.604874(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.609 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.609 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.610 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), SEK(String), 1.4643(BigDecimal), 2024-10-09T14:02:10.609888500(LocalDateTime), 2024-10-09T14:02:10.609888500(LocalDateTime), 1.4643(BigDecimal)
2024-10-09 14:02:10.613 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.614 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.614 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), SEK(String), CNY(String), 1(BigDecimal), 2024-10-09T14:02:10.614904300(LocalDateTime), 2024-10-09T14:02:10.614904300(LocalDateTime), 1(BigDecimal)
2024-10-09 14:02:10.619 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.619 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.620 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), SGD(String), 0.1846(BigDecimal), 2024-10-09T14:02:10.619110900(LocalDateTime), 2024-10-09T14:02:10.619110900(LocalDateTime), 0.1846(BigDecimal)
2024-10-09 14:02:10.623 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.623 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.624 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), SGD(String), CNY(String), 5(BigDecimal), 2024-10-09T14:02:10.623473100(LocalDateTime), 2024-10-09T14:02:10.623473100(LocalDateTime), 5(BigDecimal)
2024-10-09 14:02:10.628 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.628 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.629 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), SHP(String), 0.1081(BigDecimal), 2024-10-09T14:02:10.628401300(LocalDateTime), 2024-10-09T14:02:10.628401300(LocalDateTime), 0.1081(BigDecimal)
2024-10-09 14:02:10.633 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.634 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.634 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), SHP(String), CNY(String), 9(BigDecimal), 2024-10-09T14:02:10.633515400(LocalDateTime), 2024-10-09T14:02:10.633515400(LocalDateTime), 9(BigDecimal)
2024-10-09 14:02:10.638 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.638 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.638 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), SLE(String), 3.1976(BigDecimal), 2024-10-09T14:02:10.638006400(LocalDateTime), 2024-10-09T14:02:10.638006400(LocalDateTime), 3.1976(BigDecimal)
2024-10-09 14:02:10.642 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.643 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.644 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), SLE(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.643447600(LocalDateTime), 2024-10-09T14:02:10.643447600(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.648 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.648 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.649 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), SLL(String), 3197.6341(BigDecimal), 2024-10-09T14:02:10.648116500(LocalDateTime), 2024-10-09T14:02:10.648116500(LocalDateTime), 3197.6341(BigDecimal)
2024-10-09 14:02:10.653 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.653 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.654 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), SLL(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.653066200(LocalDateTime), 2024-10-09T14:02:10.653066200(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.657 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.658 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.659 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), SOS(String), 80.9084(BigDecimal), 2024-10-09T14:02:10.658219900(LocalDateTime), 2024-10-09T14:02:10.658219900(LocalDateTime), 80.9084(BigDecimal)
2024-10-09 14:02:10.663 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.663 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.664 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), SOS(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.663036600(LocalDateTime), 2024-10-09T14:02:10.663036600(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.667 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.667 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.668 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), SRD(String), 4.4837(BigDecimal), 2024-10-09T14:02:10.667426(LocalDateTime), 2024-10-09T14:02:10.667426(LocalDateTime), 4.4837(BigDecimal)
2024-10-09 14:02:10.671 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.671 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.672 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), SRD(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.671445300(LocalDateTime), 2024-10-09T14:02:10.671445300(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.676 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.676 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.677 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), SSP(String), 453.5719(BigDecimal), 2024-10-09T14:02:10.676445600(LocalDateTime), 2024-10-09T14:02:10.676445600(LocalDateTime), 453.5719(BigDecimal)
2024-10-09 14:02:10.681 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.681 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.681 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), SSP(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.681571200(LocalDateTime), 2024-10-09T14:02:10.681571200(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.685 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.685 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.686 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), STN(String), 3.1594(BigDecimal), 2024-10-09T14:02:10.685536300(LocalDateTime), 2024-10-09T14:02:10.685536300(LocalDateTime), 3.1594(BigDecimal)
2024-10-09 14:02:10.689 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.689 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.691 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), STN(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.689915600(LocalDateTime), 2024-10-09T14:02:10.689915600(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.694 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.694 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.695 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), SYP(String), 1824.5816(BigDecimal), 2024-10-09T14:02:10.694423300(LocalDateTime), 2024-10-09T14:02:10.694423300(LocalDateTime), 1824.5816(BigDecimal)
2024-10-09 14:02:10.698 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.699 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.699 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), SYP(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.699444800(LocalDateTime), 2024-10-09T14:02:10.699444800(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.702 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.703 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.703 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), SZL(String), 2.4834(BigDecimal), 2024-10-09T14:02:10.703913400(LocalDateTime), 2024-10-09T14:02:10.703913400(LocalDateTime), 2.4834(BigDecimal)
2024-10-09 14:02:10.707 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.708 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.708 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), SZL(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.707391500(LocalDateTime), 2024-10-09T14:02:10.707391500(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.712 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.713 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.713 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), THB(String), 4.7437(BigDecimal), 2024-10-09T14:02:10.712683600(LocalDateTime), 2024-10-09T14:02:10.712683600(LocalDateTime), 4.7437(BigDecimal)
2024-10-09 14:02:10.717 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.717 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.718 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), THB(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.717294100(LocalDateTime), 2024-10-09T14:02:10.717294100(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.721 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.721 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.722 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), TJS(String), 1.509(BigDecimal), 2024-10-09T14:02:10.721441200(LocalDateTime), 2024-10-09T14:02:10.721441200(LocalDateTime), 1.509(BigDecimal)
2024-10-09 14:02:10.726 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.727 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.727 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), TJS(String), CNY(String), 1(BigDecimal), 2024-10-09T14:02:10.727578800(LocalDateTime), 2024-10-09T14:02:10.727578800(LocalDateTime), 1(BigDecimal)
2024-10-09 14:02:10.731 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.732 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.732 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), TMT(String), 0.4962(BigDecimal), 2024-10-09T14:02:10.731282600(LocalDateTime), 2024-10-09T14:02:10.731282600(LocalDateTime), 0.4962(BigDecimal)
2024-10-09 14:02:10.735 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.735 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.736 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), TMT(String), CNY(String), 2(BigDecimal), 2024-10-09T14:02:10.735544600(LocalDateTime), 2024-10-09T14:02:10.735544600(LocalDateTime), 2(BigDecimal)
2024-10-09 14:02:10.740 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.740 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.740 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), TND(String), 0.435(BigDecimal), 2024-10-09T14:02:10.740288300(LocalDateTime), 2024-10-09T14:02:10.740288300(LocalDateTime), 0.435(BigDecimal)
2024-10-09 14:02:10.745 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.746 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.746 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), TND(String), CNY(String), 2(BigDecimal), 2024-10-09T14:02:10.746278700(LocalDateTime), 2024-10-09T14:02:10.746278700(LocalDateTime), 2(BigDecimal)
2024-10-09 14:02:10.749 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.750 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.750 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), TOP(String), 0.3343(BigDecimal), 2024-10-09T14:02:10.750784700(LocalDateTime), 2024-10-09T14:02:10.750784700(LocalDateTime), 0.3343(BigDecimal)
2024-10-09 14:02:10.755 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.755 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.755 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), TOP(String), CNY(String), 3(BigDecimal), 2024-10-09T14:02:10.755188600(LocalDateTime), 2024-10-09T14:02:10.755188600(LocalDateTime), 3(BigDecimal)
2024-10-09 14:02:10.758 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.759 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.759 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), TRY(String), 4.8491(BigDecimal), 2024-10-09T14:02:10.759997300(LocalDateTime), 2024-10-09T14:02:10.759997300(LocalDateTime), 4.8491(BigDecimal)
2024-10-09 14:02:10.764 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.764 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.765 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), TRY(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.764429600(LocalDateTime), 2024-10-09T14:02:10.764429600(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.768 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.768 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.769 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), TTD(String), 0.9646(BigDecimal), 2024-10-09T14:02:10.768447600(LocalDateTime), 2024-10-09T14:02:10.768447600(LocalDateTime), 0.9646(BigDecimal)
2024-10-09 14:02:10.772 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.772 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.773 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), TTD(String), CNY(String), 1(BigDecimal), 2024-10-09T14:02:10.772358400(LocalDateTime), 2024-10-09T14:02:10.772358400(LocalDateTime), 1(BigDecimal)
2024-10-09 14:02:10.776 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.776 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.778 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), TVD(String), 0.2102(BigDecimal), 2024-10-09T14:02:10.776699500(LocalDateTime), 2024-10-09T14:02:10.776699500(LocalDateTime), 0.2102(BigDecimal)
2024-10-09 14:02:10.781 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.782 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.782 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), TVD(String), CNY(String), 5(BigDecimal), 2024-10-09T14:02:10.781654200(LocalDateTime), 2024-10-09T14:02:10.781654200(LocalDateTime), 5(BigDecimal)
2024-10-09 14:02:10.786 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.786 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.786 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), TWD(String), 4.5605(BigDecimal), 2024-10-09T14:02:10.786763400(LocalDateTime), 2024-10-09T14:02:10.786763400(LocalDateTime), 4.5605(BigDecimal)
2024-10-09 14:02:10.790 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.790 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.790 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), TWD(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.790764700(LocalDateTime), 2024-10-09T14:02:10.790764700(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.794 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.795 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.795 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), TZS(String), 386.245(BigDecimal), 2024-10-09T14:02:10.794904400(LocalDateTime), 2024-10-09T14:02:10.794904400(LocalDateTime), 386.245(BigDecimal)
2024-10-09 14:02:10.798 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.799 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.799 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), TZS(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.799935800(LocalDateTime), 2024-10-09T14:02:10.799935800(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.804 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.805 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.805 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), UAH(String), 5.8369(BigDecimal), 2024-10-09T14:02:10.805025700(LocalDateTime), 2024-10-09T14:02:10.805025700(LocalDateTime), 5.8369(BigDecimal)
2024-10-09 14:02:10.809 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.809 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.809 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), UAH(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.809540400(LocalDateTime), 2024-10-09T14:02:10.809540400(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.814 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.814 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.814 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), UGX(String), 521.21(BigDecimal), 2024-10-09T14:02:10.814154800(LocalDateTime), 2024-10-09T14:02:10.814154800(LocalDateTime), 521.21(BigDecimal)
2024-10-09 14:02:10.818 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.819 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.819 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), UGX(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.819170700(LocalDateTime), 2024-10-09T14:02:10.819170700(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.823 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.823 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.823 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), USD(String), 0.1416(BigDecimal), 2024-10-09T14:02:10.823033200(LocalDateTime), 2024-10-09T14:02:10.823033200(LocalDateTime), 0.1416(BigDecimal)
2024-10-09 14:02:10.827 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.827 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.828 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), USD(String), CNY(String), 7(BigDecimal), 2024-10-09T14:02:10.827188700(LocalDateTime), 2024-10-09T14:02:10.827188700(LocalDateTime), 7(BigDecimal)
2024-10-09 14:02:10.831 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.831 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.832 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), UYU(String), 5.8779(BigDecimal), 2024-10-09T14:02:10.831307400(LocalDateTime), 2024-10-09T14:02:10.831307400(LocalDateTime), 5.8779(BigDecimal)
2024-10-09 14:02:10.835 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.835 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.835 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), UYU(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.835764(LocalDateTime), 2024-10-09T14:02:10.835764(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.839 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.839 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.839 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), UZS(String), 1817.3496(BigDecimal), 2024-10-09T14:02:10.839581(LocalDateTime), 2024-10-09T14:02:10.839581(LocalDateTime), 1817.3496(BigDecimal)
2024-10-09 14:02:10.843 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.843 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.844 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), UZS(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.843034100(LocalDateTime), 2024-10-09T14:02:10.843034100(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.847 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.847 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.847 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), VES(String), 5.2559(BigDecimal), 2024-10-09T14:02:10.847551500(LocalDateTime), 2024-10-09T14:02:10.847551500(LocalDateTime), 5.2559(BigDecimal)
2024-10-09 14:02:10.851 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.851 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.852 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), VES(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.851364100(LocalDateTime), 2024-10-09T14:02:10.851364100(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.855 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.855 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.856 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), VND(String), 3514.399(BigDecimal), 2024-10-09T14:02:10.855518(LocalDateTime), 2024-10-09T14:02:10.855518(LocalDateTime), 3514.399(BigDecimal)
2024-10-09 14:02:10.859 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.859 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.860 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), VND(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.859423100(LocalDateTime), 2024-10-09T14:02:10.859423100(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.863 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.864 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.864 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), VUV(String), 16.8749(BigDecimal), 2024-10-09T14:02:10.863638300(LocalDateTime), 2024-10-09T14:02:10.863638300(LocalDateTime), 16.8749(BigDecimal)
2024-10-09 14:02:10.868 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.868 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.868 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), VUV(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.868602100(LocalDateTime), 2024-10-09T14:02:10.868602100(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.872 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.872 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.872 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), WST(String), 0.3844(BigDecimal), 2024-10-09T14:02:10.872463200(LocalDateTime), 2024-10-09T14:02:10.872463200(LocalDateTime), 0.3844(BigDecimal)
2024-10-09 14:02:10.876 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.877 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.877 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), WST(String), CNY(String), 3(BigDecimal), 2024-10-09T14:02:10.877020700(LocalDateTime), 2024-10-09T14:02:10.877020700(LocalDateTime), 3(BigDecimal)
2024-10-09 14:02:10.881 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.881 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.881 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), XAF(String), 84.5893(BigDecimal), 2024-10-09T14:02:10.881421400(LocalDateTime), 2024-10-09T14:02:10.881421400(LocalDateTime), 84.5893(BigDecimal)
2024-10-09 14:02:10.885 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.885 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.885 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), XAF(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.885707900(LocalDateTime), 2024-10-09T14:02:10.885707900(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.889 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.889 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.889 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), XCD(String), 0.3822(BigDecimal), 2024-10-09T14:02:10.889046(LocalDateTime), 2024-10-09T14:02:10.889046(LocalDateTime), 0.3822(BigDecimal)
2024-10-09 14:02:10.892 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.893 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.893 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), XCD(String), CNY(String), 3(BigDecimal), 2024-10-09T14:02:10.893834(LocalDateTime), 2024-10-09T14:02:10.893834(LocalDateTime), 3(BigDecimal)
2024-10-09 14:02:10.897 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.897 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.897 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), XDR(String), 0.1057(BigDecimal), 2024-10-09T14:02:10.897728200(LocalDateTime), 2024-10-09T14:02:10.897728200(LocalDateTime), 0.1057(BigDecimal)
2024-10-09 14:02:10.901 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.901 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.902 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), XDR(String), CNY(String), 9(BigDecimal), 2024-10-09T14:02:10.901542400(LocalDateTime), 2024-10-09T14:02:10.901542400(LocalDateTime), 9(BigDecimal)
2024-10-09 14:02:10.905 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.905 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.906 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), XOF(String), 84.5893(BigDecimal), 2024-10-09T14:02:10.905076900(LocalDateTime), 2024-10-09T14:02:10.905076900(LocalDateTime), 84.5893(BigDecimal)
2024-10-09 14:02:10.909 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.909 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.909 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), XOF(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.909804(LocalDateTime), 2024-10-09T14:02:10.909804(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.914 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.914 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.914 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), XPF(String), 15.3885(BigDecimal), 2024-10-09T14:02:10.914057(LocalDateTime), 2024-10-09T14:02:10.914057(LocalDateTime), 15.3885(BigDecimal)
2024-10-09 14:02:10.917 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.917 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.917 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), XPF(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.917988500(LocalDateTime), 2024-10-09T14:02:10.917988500(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.921 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.921 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.922 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), YER(String), 35.4607(BigDecimal), 2024-10-09T14:02:10.921361600(LocalDateTime), 2024-10-09T14:02:10.921361600(LocalDateTime), 35.4607(BigDecimal)
2024-10-09 14:02:10.924 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.926 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.926 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), YER(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.926013900(LocalDateTime), 2024-10-09T14:02:10.926013900(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.930 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.930 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.930 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), ZAR(String), 2.4834(BigDecimal), 2024-10-09T14:02:10.930453600(LocalDateTime), 2024-10-09T14:02:10.930453600(LocalDateTime), 2.4834(BigDecimal)
2024-10-09 14:02:10.934 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.934 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.934 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), ZAR(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.934396600(LocalDateTime), 2024-10-09T14:02:10.934396600(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.938 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.938 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.938 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), ZMW(String), 3.7703(BigDecimal), 2024-10-09T14:02:10.938393500(LocalDateTime), 2024-10-09T14:02:10.938393500(LocalDateTime), 3.7703(BigDecimal)
2024-10-09 14:02:10.942 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.942 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.943 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), ZMW(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.942395(LocalDateTime), 2024-10-09T14:02:10.942395(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.947 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.947 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.947 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), ZWL(String), 3.6623(BigDecimal), 2024-10-09T14:02:10.947557900(LocalDateTime), 2024-10-09T14:02:10.947557900(LocalDateTime), 3.6623(BigDecimal)
2024-10-09 14:02:10.951 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:02:10.951 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:02:10.951 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), ZWL(String), CNY(String), 0(BigDecimal), 2024-10-09T14:02:10.951645800(LocalDateTime), 2024-10-09T14:02:10.951645800(LocalDateTime), 0(BigDecimal)
2024-10-09 14:02:10.956 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:19:21.272 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-10-09 14:19:22.284 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-10-09 14:19:22.298 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-10-09 14:19:22.301 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2024-10-09 14:19:22.302 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-10-09 14:19:22.351 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-09 14:19:22.353 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1000 ms
2024-10-09 14:19:23.251 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-10-09 14:19:23.273 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-10-09 14:19:25.067 [http-nio-8080-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-10-09 14:19:25.067 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-10-09 14:19:25.068 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2024-10-09 14:19:25.169 [http-nio-8080-exec-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-10-09 14:19:25.299 [http-nio-8080-exec-1] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2d2d7c34
2024-10-09 14:19:25.300 [http-nio-8080-exec-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-10-09 14:19:25.307 [http-nio-8080-exec-1] DEBUG com.jngyen.bookkeeping.backend.mapper.UserConfigMapper.updateUserBaseCurrency - ==>  Preparing: UPDATE user_config SET base_currency = ?, base_currency_color = ?, gmt_modified = NOW() WHERE user_uuid = ?
2024-10-09 14:19:25.330 [http-nio-8080-exec-1] DEBUG com.jngyen.bookkeeping.backend.mapper.UserConfigMapper.updateUserBaseCurrency - ==> Parameters: MR(String), #FFEC00(String), 00497f8d-563c-4e6d-9e92-ab0f7bed72be(String)
2024-10-09 14:19:25.461 [http-nio-8080-exec-1] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'base_currency' in 'field list'
### The error may exist in file [D:\Code\Java\Bookkeeping\backend\target\classes\mapper\UserConfig.xml]
### The error may involve com.jngyen.bookkeeping.backend.mapper.UserConfigMapper.updateUserBaseCurrency-Inline
### The error occurred while setting parameters
### SQL: UPDATE user_config         SET base_currency = ?, base_currency_color = ?, gmt_modified = NOW()         WHERE user_uuid = ?
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'base_currency' in 'field list'
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: Unknown column 'base_currency' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354) ~[mysql-connector-j-8.3.0.jar:8.3.0]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-5.1.0.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-5.1.0.jar:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58) ~[mybatis-3.5.14.jar:3.5.14]
	at jdk.proxy3/jdk.proxy3.$Proxy93.execute(Unknown Source) ~[?:?]
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48) ~[mybatis-3.5.14.jar:3.5.14]
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75) ~[mybatis-3.5.14.jar:3.5.14]
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50) ~[mybatis-3.5.14.jar:3.5.14]
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117) ~[mybatis-3.5.14.jar:3.5.14]
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76) ~[mybatis-3.5.14.jar:3.5.14]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197) ~[mybatis-3.5.14.jar:3.5.14]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at jdk.proxy2/jdk.proxy2.$Proxy80.update(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288) ~[mybatis-spring-3.0.3.jar:3.0.3]
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67) ~[mybatis-3.5.14.jar:3.5.14]
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141) ~[mybatis-3.5.14.jar:3.5.14]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86) ~[mybatis-3.5.14.jar:3.5.14]
	at jdk.proxy2/jdk.proxy2.$Proxy84.updateUserBaseCurrency(Unknown Source) ~[?:?]
	at com.jngyen.bookkeeping.backend.service.user.UserConfigService.setBaseCurrency(UserConfigService.java:36) ~[classes/:?]
	at com.jngyen.bookkeeping.backend.controller.UserConfigController.setBaseCurrency(UserConfigController.java:32) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.13.jar:6.1.13]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.13.jar:6.1.13]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.13.jar:6.1.13]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.13.jar:6.1.13]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.13.jar:6.1.13]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.13.jar:6.1.13]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.13.jar:6.1.13]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.13.jar:6.1.13]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.13.jar:6.1.13]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.13.jar:6.1.13]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.30.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.13.jar:6.1.13]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.30.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.30.jar:10.1.30]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.30.jar:10.1.30]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.30.jar:10.1.30]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.30.jar:10.1.30]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.30.jar:10.1.30]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.13.jar:6.1.13]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.13.jar:6.1.13]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.30.jar:10.1.30]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.30.jar:10.1.30]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.13.jar:6.1.13]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.13.jar:6.1.13]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.30.jar:10.1.30]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.30.jar:10.1.30]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.13.jar:6.1.13]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.13.jar:6.1.13]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.30.jar:10.1.30]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.30.jar:10.1.30]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.30.jar:10.1.30]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.30.jar:10.1.30]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.30.jar:10.1.30]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.30.jar:10.1.30]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.30.jar:10.1.30]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.30.jar:10.1.30]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.30.jar:10.1.30]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384) ~[tomcat-embed-core-10.1.30.jar:10.1.30]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.30.jar:10.1.30]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905) ~[tomcat-embed-core-10.1.30.jar:10.1.30]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.30.jar:10.1.30]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.30.jar:10.1.30]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.30.jar:10.1.30]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.30.jar:10.1.30]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.30.jar:10.1.30]
	at java.base/java.lang.Thread.run(Thread.java:1583) [?:?]
2024-10-09 14:21:34.270 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-10-09 14:21:35.376 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-10-09 14:21:35.388 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-10-09 14:21:35.394 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2024-10-09 14:21:35.394 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-10-09 14:21:35.446 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-09 14:21:35.448 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1117 ms
2024-10-09 14:21:36.231 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-10-09 14:21:36.255 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-10-09 14:21:36.792 [http-nio-8080-exec-2] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-10-09 14:21:36.792 [http-nio-8080-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-10-09 14:21:36.793 [http-nio-8080-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2024-10-09 14:21:36.904 [http-nio-8080-exec-2] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-10-09 14:21:37.049 [http-nio-8080-exec-2] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@9a394ac
2024-10-09 14:21:37.050 [http-nio-8080-exec-2] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-10-09 14:21:37.057 [http-nio-8080-exec-2] DEBUG com.jngyen.bookkeeping.backend.mapper.UserConfigMapper.updateUserBaseCurrency - ==>  Preparing: UPDATE user_config SET home_currency = ?, home_currency_color = ?, gmt_modified = NOW() WHERE user_uuid = ?
2024-10-09 14:21:37.080 [http-nio-8080-exec-2] DEBUG com.jngyen.bookkeeping.backend.mapper.UserConfigMapper.updateUserBaseCurrency - ==> Parameters: MR(String), #FFEC00(String), 00497f8d-563c-4e6d-9e92-ab0f7bed72be(String)
2024-10-09 14:21:37.124 [http-nio-8080-exec-2] DEBUG com.jngyen.bookkeeping.backend.mapper.UserConfigMapper.updateUserBaseCurrency - <==    Updates: 1
2024-10-09 14:28:21.339 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-10-09 14:28:22.407 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-10-09 14:28:22.426 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-10-09 14:28:22.430 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2024-10-09 14:28:22.430 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-10-09 14:28:22.491 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-09 14:28:22.495 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1075 ms
2024-10-09 14:28:23.208 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-10-09 14:28:23.230 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-10-09 14:28:30.107 [http-nio-8080-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-10-09 14:28:30.108 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-10-09 14:28:30.109 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-10-09 14:28:30.208 [http-nio-8080-exec-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-10-09 14:28:30.342 [http-nio-8080-exec-1] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@447ee309
2024-10-09 14:28:30.344 [http-nio-8080-exec-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-10-09 14:28:30.351 [http-nio-8080-exec-1] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.getExchangeRate - ==>  Preparing: SELECT id, base_currency, target_currency, rate, gmt_create, gmt_modified FROM exchange_rate WHERE base_currency = ? AND target_currency = ?
2024-10-09 14:28:30.380 [http-nio-8080-exec-1] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.getExchangeRate - ==> Parameters: CNY(String), CNY(String)
2024-10-09 14:28:30.408 [http-nio-8080-exec-1] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.getExchangeRate - <==      Total: 1
2024-10-09 14:31:09.495 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-10-09 14:31:10.561 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-10-09 14:31:10.573 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-10-09 14:31:10.577 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2024-10-09 14:31:10.577 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-10-09 14:31:10.626 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-09 14:31:10.626 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1043 ms
2024-10-09 14:31:11.377 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-10-09 14:31:11.397 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-10-09 14:31:13.561 [http-nio-8080-exec-3] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-10-09 14:31:13.561 [http-nio-8080-exec-3] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-10-09 14:31:13.565 [http-nio-8080-exec-3] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2024-10-09 14:31:13.673 [http-nio-8080-exec-3] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-10-09 14:31:13.815 [http-nio-8080-exec-3] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1f04f4a4
2024-10-09 14:31:13.815 [http-nio-8080-exec-3] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-10-09 14:31:13.823 [http-nio-8080-exec-3] DEBUG com.jngyen.bookkeeping.backend.mapper.UserConfigMapper.getUserConfigByUuid - ==>  Preparing: SELECT id, user_uuid, home_currency,home_currency_color, is_use_custom_rate, gmt_create, gmt_modified FROM user_config WHERE user_uuid = ?
2024-10-09 14:31:13.843 [http-nio-8080-exec-3] DEBUG com.jngyen.bookkeeping.backend.mapper.UserConfigMapper.getUserConfigByUuid - ==> Parameters: 00497f8d-563c-4e6d-9e92-ab0f7bed72be(String)
2024-10-09 14:31:13.868 [http-nio-8080-exec-3] DEBUG com.jngyen.bookkeeping.backend.mapper.UserConfigMapper.getUserConfigByUuid - <==      Total: 1
2024-10-09 14:31:13.874 [http-nio-8080-exec-3] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.getExchangeRate - ==>  Preparing: SELECT id, base_currency, target_currency, rate, gmt_create, gmt_modified FROM exchange_rate WHERE base_currency = ? AND target_currency = ?
2024-10-09 14:31:13.877 [http-nio-8080-exec-3] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.getExchangeRate - ==> Parameters: MR(String), MR(String)
2024-10-09 14:31:13.883 [http-nio-8080-exec-3] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.getExchangeRate - <==      Total: 0
2024-10-09 14:31:15.191 [reactor-http-nio-2] ERROR com.jngyen.bookkeeping.backend.service.user.ExchangeRateService - Failed to get exchange rate from API
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET https://v6.exchangerate-api.com/v6/94b7b12367902c235b7894fb/latest/MR
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324) ~[spring-webflux-6.1.13.jar:6.1.13]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET https://v6.exchangerate-api.com/v6/94b7b12367902c235b7894fb/latest/MR [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324) ~[spring-webflux-6.1.13.jar:6.1.13]
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214) ~[spring-webflux-6.1.13.jar:6.1.13]
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:415) ~[reactor-netty-core-1.1.22.jar:1.1.22]
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:445) ~[reactor-netty-core-1.1.22.jar:1.1.22]
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:499) ~[reactor-netty-core-1.1.22.jar:1.1.22]
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:800) ~[reactor-netty-http-1.1.22.jar:1.1.22]
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115) ~[reactor-netty-core-1.1.22.jar:1.1.22]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103) ~[netty-codec-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346) ~[netty-codec-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318) ~[netty-codec-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1495) ~[netty-handler-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1358) ~[netty-handler-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1407) ~[netty-handler-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530) ~[netty-codec-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469) ~[netty-codec-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290) ~[netty-codec-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[netty-common-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.113.Final.jar:4.1.113.Final]
		at java.base/java.lang.Thread.run(Thread.java:1583) [?:?]
2024-10-09 14:31:23.249 [http-nio-8080-exec-1] DEBUG com.jngyen.bookkeeping.backend.mapper.UserConfigMapper.getUserConfigByUuid - ==>  Preparing: SELECT id, user_uuid, home_currency,home_currency_color, is_use_custom_rate, gmt_create, gmt_modified FROM user_config WHERE user_uuid = ?
2024-10-09 14:31:23.249 [http-nio-8080-exec-1] DEBUG com.jngyen.bookkeeping.backend.mapper.UserConfigMapper.getUserConfigByUuid - ==> Parameters: 00497f8d-563c-4e6d-9e92-ab0f7bed72be(String)
2024-10-09 14:31:23.250 [http-nio-8080-exec-1] DEBUG com.jngyen.bookkeeping.backend.mapper.UserConfigMapper.getUserConfigByUuid - <==      Total: 1
2024-10-09 14:31:23.252 [http-nio-8080-exec-1] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.getExchangeRate - ==>  Preparing: SELECT id, base_currency, target_currency, rate, gmt_create, gmt_modified FROM exchange_rate WHERE base_currency = ? AND target_currency = ?
2024-10-09 14:31:23.253 [http-nio-8080-exec-1] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.getExchangeRate - ==> Parameters: MR(String), MR(String)
2024-10-09 14:31:23.253 [http-nio-8080-exec-1] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.getExchangeRate - <==      Total: 0
2024-10-09 14:31:23.659 [reactor-http-nio-2] ERROR com.jngyen.bookkeeping.backend.service.user.ExchangeRateService - Failed to get exchange rate from API
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET https://v6.exchangerate-api.com/v6/94b7b12367902c235b7894fb/latest/MR
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324) ~[spring-webflux-6.1.13.jar:6.1.13]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET https://v6.exchangerate-api.com/v6/94b7b12367902c235b7894fb/latest/MR [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324) ~[spring-webflux-6.1.13.jar:6.1.13]
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214) ~[spring-webflux-6.1.13.jar:6.1.13]
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:415) ~[reactor-netty-core-1.1.22.jar:1.1.22]
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:445) ~[reactor-netty-core-1.1.22.jar:1.1.22]
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:499) ~[reactor-netty-core-1.1.22.jar:1.1.22]
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:800) ~[reactor-netty-http-1.1.22.jar:1.1.22]
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115) ~[reactor-netty-core-1.1.22.jar:1.1.22]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103) ~[netty-codec-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346) ~[netty-codec-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318) ~[netty-codec-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1495) ~[netty-handler-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1358) ~[netty-handler-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1407) ~[netty-handler-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530) ~[netty-codec-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469) ~[netty-codec-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290) ~[netty-codec-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[netty-common-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.113.Final.jar:4.1.113.Final]
		at java.base/java.lang.Thread.run(Thread.java:1583) [?:?]
2024-10-09 14:34:05.602 [http-nio-8080-exec-6] DEBUG com.jngyen.bookkeeping.backend.mapper.UserConfigMapper.getUserConfigByUuid - ==>  Preparing: SELECT id, user_uuid, home_currency,home_currency_color, is_use_custom_rate, gmt_create, gmt_modified FROM user_config WHERE user_uuid = ?
2024-10-09 14:34:05.602 [http-nio-8080-exec-6] DEBUG com.jngyen.bookkeeping.backend.mapper.UserConfigMapper.getUserConfigByUuid - ==> Parameters: 00497f8d-563c-4e6d-9e92-ab0f7bed72be(String)
2024-10-09 14:34:05.605 [http-nio-8080-exec-6] DEBUG com.jngyen.bookkeeping.backend.mapper.UserConfigMapper.getUserConfigByUuid - <==      Total: 1
2024-10-09 14:34:05.605 [http-nio-8080-exec-6] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.getExchangeRate - ==>  Preparing: SELECT id, base_currency, target_currency, rate, gmt_create, gmt_modified FROM exchange_rate WHERE base_currency = ? AND target_currency = ?
2024-10-09 14:34:05.606 [http-nio-8080-exec-6] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.getExchangeRate - ==> Parameters: MR(String), MR(String)
2024-10-09 14:34:05.606 [http-nio-8080-exec-6] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.getExchangeRate - <==      Total: 0
2024-10-09 14:34:07.004 [reactor-http-nio-2] ERROR com.jngyen.bookkeeping.backend.service.user.ExchangeRateService - Failed to get exchange rate from API
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET https://v6.exchangerate-api.com/v6/94b7b12367902c235b7894fb/latest/MR
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324) ~[spring-webflux-6.1.13.jar:6.1.13]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET https://v6.exchangerate-api.com/v6/94b7b12367902c235b7894fb/latest/MR [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324) ~[spring-webflux-6.1.13.jar:6.1.13]
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214) ~[spring-webflux-6.1.13.jar:6.1.13]
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:415) ~[reactor-netty-core-1.1.22.jar:1.1.22]
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:445) ~[reactor-netty-core-1.1.22.jar:1.1.22]
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:499) ~[reactor-netty-core-1.1.22.jar:1.1.22]
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:800) ~[reactor-netty-http-1.1.22.jar:1.1.22]
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115) ~[reactor-netty-core-1.1.22.jar:1.1.22]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103) ~[netty-codec-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346) ~[netty-codec-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318) ~[netty-codec-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1495) ~[netty-handler-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1358) ~[netty-handler-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1407) ~[netty-handler-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530) ~[netty-codec-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469) ~[netty-codec-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290) ~[netty-codec-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[netty-common-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.113.Final.jar:4.1.113.Final]
		at java.base/java.lang.Thread.run(Thread.java:1583) [?:?]
2024-10-09 14:34:17.131 [http-nio-8080-exec-7] DEBUG com.jngyen.bookkeeping.backend.mapper.UserConfigMapper.getUserConfigByUuid - ==>  Preparing: SELECT id, user_uuid, home_currency,home_currency_color, is_use_custom_rate, gmt_create, gmt_modified FROM user_config WHERE user_uuid = ?
2024-10-09 14:34:17.133 [http-nio-8080-exec-7] DEBUG com.jngyen.bookkeeping.backend.mapper.UserConfigMapper.getUserConfigByUuid - ==> Parameters: 00497f8d-563c-4e6d-9e92-ab0f7bed72be(String)
2024-10-09 14:34:17.133 [http-nio-8080-exec-7] DEBUG com.jngyen.bookkeeping.backend.mapper.UserConfigMapper.getUserConfigByUuid - <==      Total: 1
2024-10-09 14:34:17.133 [http-nio-8080-exec-7] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.getExchangeRate - ==>  Preparing: SELECT id, base_currency, target_currency, rate, gmt_create, gmt_modified FROM exchange_rate WHERE base_currency = ? AND target_currency = ?
2024-10-09 14:34:17.135 [http-nio-8080-exec-7] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.getExchangeRate - ==> Parameters: MR(String), MR(String)
2024-10-09 14:34:17.135 [http-nio-8080-exec-7] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.getExchangeRate - <==      Total: 0
2024-10-09 14:34:17.620 [reactor-http-nio-2] ERROR com.jngyen.bookkeeping.backend.service.user.ExchangeRateService - Failed to get exchange rate from API
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET https://v6.exchangerate-api.com/v6/94b7b12367902c235b7894fb/latest/MR
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324) ~[spring-webflux-6.1.13.jar:6.1.13]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET https://v6.exchangerate-api.com/v6/94b7b12367902c235b7894fb/latest/MR [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324) ~[spring-webflux-6.1.13.jar:6.1.13]
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214) ~[spring-webflux-6.1.13.jar:6.1.13]
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:415) ~[reactor-netty-core-1.1.22.jar:1.1.22]
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:445) ~[reactor-netty-core-1.1.22.jar:1.1.22]
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:499) ~[reactor-netty-core-1.1.22.jar:1.1.22]
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:800) ~[reactor-netty-http-1.1.22.jar:1.1.22]
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115) ~[reactor-netty-core-1.1.22.jar:1.1.22]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103) ~[netty-codec-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346) ~[netty-codec-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318) ~[netty-codec-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1495) ~[netty-handler-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1358) ~[netty-handler-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1407) ~[netty-handler-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530) ~[netty-codec-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469) ~[netty-codec-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290) ~[netty-codec-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[netty-common-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.113.Final.jar:4.1.113.Final]
		at java.base/java.lang.Thread.run(Thread.java:1583) [?:?]
2024-10-09 14:35:51.945 [http-nio-8080-exec-10] DEBUG com.jngyen.bookkeeping.backend.mapper.UserConfigMapper.getUserConfigByUuid - ==>  Preparing: SELECT id, user_uuid, home_currency,home_currency_color, is_use_custom_rate, gmt_create, gmt_modified FROM user_config WHERE user_uuid = ?
2024-10-09 14:35:51.945 [http-nio-8080-exec-10] DEBUG com.jngyen.bookkeeping.backend.mapper.UserConfigMapper.getUserConfigByUuid - ==> Parameters: 00497f8d-563c-4e6d-9e92-ab0f7bed72be(String)
2024-10-09 14:35:51.947 [http-nio-8080-exec-10] DEBUG com.jngyen.bookkeeping.backend.mapper.UserConfigMapper.getUserConfigByUuid - <==      Total: 1
2024-10-09 14:35:51.947 [http-nio-8080-exec-10] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.getExchangeRate - ==>  Preparing: SELECT id, base_currency, target_currency, rate, gmt_create, gmt_modified FROM exchange_rate WHERE base_currency = ? AND target_currency = ?
2024-10-09 14:35:51.947 [http-nio-8080-exec-10] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.getExchangeRate - ==> Parameters: MR(String), MR(String)
2024-10-09 14:35:51.947 [http-nio-8080-exec-10] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.getExchangeRate - <==      Total: 0
2024-10-09 14:35:52.345 [reactor-http-nio-2] ERROR com.jngyen.bookkeeping.backend.service.user.ExchangeRateService - Failed to get exchange rate from API
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET https://v6.exchangerate-api.com/v6/94b7b12367902c235b7894fb/latest/MR
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324) ~[spring-webflux-6.1.13.jar:6.1.13]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET https://v6.exchangerate-api.com/v6/94b7b12367902c235b7894fb/latest/MR [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324) ~[spring-webflux-6.1.13.jar:6.1.13]
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214) ~[spring-webflux-6.1.13.jar:6.1.13]
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:415) ~[reactor-netty-core-1.1.22.jar:1.1.22]
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:445) ~[reactor-netty-core-1.1.22.jar:1.1.22]
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:499) ~[reactor-netty-core-1.1.22.jar:1.1.22]
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:800) ~[reactor-netty-http-1.1.22.jar:1.1.22]
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115) ~[reactor-netty-core-1.1.22.jar:1.1.22]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103) ~[netty-codec-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346) ~[netty-codec-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318) ~[netty-codec-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1495) ~[netty-handler-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1358) ~[netty-handler-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1407) ~[netty-handler-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530) ~[netty-codec-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469) ~[netty-codec-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290) ~[netty-codec-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[netty-common-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.113.Final.jar:4.1.113.Final]
		at java.base/java.lang.Thread.run(Thread.java:1583) [?:?]
2024-10-09 14:36:50.243 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-10-09 14:36:51.321 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-10-09 14:36:51.331 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-10-09 14:36:51.336 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2024-10-09 14:36:51.336 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-10-09 14:36:51.388 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-09 14:36:51.391 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1085 ms
2024-10-09 14:36:52.185 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-10-09 14:36:52.212 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-10-09 14:36:56.779 [http-nio-8080-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-10-09 14:36:56.779 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-10-09 14:36:56.782 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2024-10-09 14:36:56.891 [http-nio-8080-exec-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-10-09 14:36:57.016 [http-nio-8080-exec-1] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4a7514c6
2024-10-09 14:36:57.017 [http-nio-8080-exec-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-10-09 14:36:57.025 [http-nio-8080-exec-1] DEBUG com.jngyen.bookkeeping.backend.mapper.UserConfigMapper.getUserConfigByUuid - ==>  Preparing: SELECT id, user_uuid, home_currency,home_currency_color, is_use_custom_rate, gmt_create, gmt_modified FROM user_config WHERE user_uuid = ?
2024-10-09 14:36:57.047 [http-nio-8080-exec-1] DEBUG com.jngyen.bookkeeping.backend.mapper.UserConfigMapper.getUserConfigByUuid - ==> Parameters: 00497f8d-563c-4e6d-9e92-ab0f7bed72be(String)
2024-10-09 14:36:57.068 [http-nio-8080-exec-1] DEBUG com.jngyen.bookkeeping.backend.mapper.UserConfigMapper.getUserConfigByUuid - <==      Total: 1
2024-10-09 14:36:57.074 [http-nio-8080-exec-1] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.getExchangeRate - ==>  Preparing: SELECT id, base_currency, target_currency, rate, gmt_create, gmt_modified FROM exchange_rate WHERE base_currency = ? AND target_currency = ?
2024-10-09 14:36:57.075 [http-nio-8080-exec-1] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.getExchangeRate - ==> Parameters: MR(String), MR(String)
2024-10-09 14:36:57.076 [http-nio-8080-exec-1] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.getExchangeRate - <==      Total: 0
2024-10-09 14:36:57.076 [http-nio-8080-exec-1] INFO  com.jngyen.bookkeeping.backend.service.user.ExchangeRateService - oldRatePO: null
2024-10-09 14:36:58.357 [reactor-http-nio-2] ERROR com.jngyen.bookkeeping.backend.service.user.ExchangeRateService - Failed to get exchange rate from API
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET https://v6.exchangerate-api.com/v6/94b7b12367902c235b7894fb/latest/MR
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324) ~[spring-webflux-6.1.13.jar:6.1.13]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET https://v6.exchangerate-api.com/v6/94b7b12367902c235b7894fb/latest/MR [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324) ~[spring-webflux-6.1.13.jar:6.1.13]
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214) ~[spring-webflux-6.1.13.jar:6.1.13]
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:415) ~[reactor-netty-core-1.1.22.jar:1.1.22]
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:445) ~[reactor-netty-core-1.1.22.jar:1.1.22]
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:499) ~[reactor-netty-core-1.1.22.jar:1.1.22]
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:800) ~[reactor-netty-http-1.1.22.jar:1.1.22]
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115) ~[reactor-netty-core-1.1.22.jar:1.1.22]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103) ~[netty-codec-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346) ~[netty-codec-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318) ~[netty-codec-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1495) ~[netty-handler-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1358) ~[netty-handler-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1407) ~[netty-handler-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530) ~[netty-codec-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469) ~[netty-codec-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290) ~[netty-codec-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[netty-common-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.113.Final.jar:4.1.113.Final]
		at java.base/java.lang.Thread.run(Thread.java:1583) [?:?]
2024-10-09 14:38:51.308 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-10-09 14:38:52.316 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-10-09 14:38:52.331 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-10-09 14:38:52.335 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2024-10-09 14:38:52.335 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-10-09 14:38:52.390 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-09 14:38:52.392 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1004 ms
2024-10-09 14:38:53.136 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-10-09 14:38:53.153 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-10-09 14:39:52.468 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-10-09 14:39:53.784 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-10-09 14:39:53.797 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-10-09 14:39:53.803 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2024-10-09 14:39:53.803 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-10-09 14:39:53.862 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-09 14:39:53.865 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1319 ms
2024-10-09 14:39:54.707 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-10-09 14:39:54.725 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-10-09 14:40:11.372 [http-nio-8080-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-10-09 14:40:11.372 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-10-09 14:40:11.374 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2024-10-09 14:40:11.472 [http-nio-8080-exec-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-10-09 14:40:11.639 [http-nio-8080-exec-1] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1b6048dd
2024-10-09 14:40:11.640 [http-nio-8080-exec-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-10-09 14:40:11.646 [http-nio-8080-exec-1] DEBUG com.jngyen.bookkeeping.backend.mapper.UserConfigMapper.getUserConfigByUuid - ==>  Preparing: SELECT id, user_uuid, home_currency,home_currency_color, is_use_custom_rate, gmt_create, gmt_modified FROM user_config WHERE user_uuid = ?
2024-10-09 14:40:11.671 [http-nio-8080-exec-1] DEBUG com.jngyen.bookkeeping.backend.mapper.UserConfigMapper.getUserConfigByUuid - ==> Parameters: 00497f8d-563c-4e6d-9e92-ab0f7bed72be(String)
2024-10-09 14:40:11.699 [http-nio-8080-exec-1] DEBUG com.jngyen.bookkeeping.backend.mapper.UserConfigMapper.getUserConfigByUuid - <==      Total: 1
2024-10-09 14:40:11.706 [http-nio-8080-exec-1] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.getExchangeRate - ==>  Preparing: SELECT id, base_currency, target_currency, rate, gmt_create, gmt_modified FROM exchange_rate WHERE base_currency = ? AND target_currency = ?
2024-10-09 14:40:11.707 [http-nio-8080-exec-1] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.getExchangeRate - ==> Parameters: MR(String), MR(String)
2024-10-09 14:40:11.708 [http-nio-8080-exec-1] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.getExchangeRate - <==      Total: 0
2024-10-09 14:40:11.709 [http-nio-8080-exec-1] INFO  com.jngyen.bookkeeping.backend.service.user.ExchangeRateService - oldRatePO: null
2024-10-09 14:40:12.666 [reactor-http-nio-2] ERROR com.jngyen.bookkeeping.backend.service.user.ExchangeRateService - Failed to get exchange rate from API
org.springframework.web.reactive.function.client.WebClientResponseException$NotFound: 404 Not Found from GET https://v6.exchangerate-api.com/v6/94b7b12367902c235b7894fb/latest/MR
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324) ~[spring-webflux-6.1.13.jar:6.1.13]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 404 NOT_FOUND from GET https://v6.exchangerate-api.com/v6/94b7b12367902c235b7894fb/latest/MR [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:324) ~[spring-webflux-6.1.13.jar:6.1.13]
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214) ~[spring-webflux-6.1.13.jar:6.1.13]
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144) ~[reactor-core-3.6.10.jar:3.6.10]
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:415) ~[reactor-netty-core-1.1.22.jar:1.1.22]
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:445) ~[reactor-netty-core-1.1.22.jar:1.1.22]
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:499) ~[reactor-netty-core-1.1.22.jar:1.1.22]
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:800) ~[reactor-netty-http-1.1.22.jar:1.1.22]
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:115) ~[reactor-netty-core-1.1.22.jar:1.1.22]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103) ~[netty-codec-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346) ~[netty-codec-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318) ~[netty-codec-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1495) ~[netty-handler-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1358) ~[netty-handler-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1407) ~[netty-handler-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530) ~[netty-codec-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469) ~[netty-codec-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290) ~[netty-codec-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562) ~[netty-transport-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[netty-common-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.113.Final.jar:4.1.113.Final]
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.113.Final.jar:4.1.113.Final]
		at java.base/java.lang.Thread.run(Thread.java:1583) [?:?]
2024-10-09 14:41:27.975 [http-nio-8080-exec-2] DEBUG com.jngyen.bookkeeping.backend.mapper.UserConfigMapper.updateUserBaseCurrency - ==>  Preparing: UPDATE user_config SET home_currency = ?, home_currency_color = ?, gmt_modified = NOW() WHERE user_uuid = ?
2024-10-09 14:41:27.977 [http-nio-8080-exec-2] DEBUG com.jngyen.bookkeeping.backend.mapper.UserConfigMapper.updateUserBaseCurrency - ==> Parameters: EUR(String), #FFEC00(String), 00497f8d-563c-4e6d-9e92-ab0f7bed72be(String)
2024-10-09 14:41:28.018 [http-nio-8080-exec-2] DEBUG com.jngyen.bookkeeping.backend.mapper.UserConfigMapper.updateUserBaseCurrency - <==    Updates: 1
2024-10-09 14:42:50.810 [http-nio-8080-exec-8] DEBUG com.jngyen.bookkeeping.backend.mapper.UserConfigMapper.getUserConfigByUuid - ==>  Preparing: SELECT id, user_uuid, home_currency,home_currency_color, is_use_custom_rate, gmt_create, gmt_modified FROM user_config WHERE user_uuid = ?
2024-10-09 14:42:50.810 [http-nio-8080-exec-8] DEBUG com.jngyen.bookkeeping.backend.mapper.UserConfigMapper.getUserConfigByUuid - ==> Parameters: 00497f8d-563c-4e6d-9e92-ab0f7bed72be(String)
2024-10-09 14:42:50.814 [http-nio-8080-exec-8] DEBUG com.jngyen.bookkeeping.backend.mapper.UserConfigMapper.getUserConfigByUuid - <==      Total: 1
2024-10-09 14:42:50.814 [http-nio-8080-exec-8] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.getExchangeRate - ==>  Preparing: SELECT id, base_currency, target_currency, rate, gmt_create, gmt_modified FROM exchange_rate WHERE base_currency = ? AND target_currency = ?
2024-10-09 14:42:50.814 [http-nio-8080-exec-8] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.getExchangeRate - ==> Parameters: EUR(String), EUR(String)
2024-10-09 14:42:50.814 [http-nio-8080-exec-8] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.getExchangeRate - <==      Total: 0
2024-10-09 14:42:50.814 [http-nio-8080-exec-8] INFO  com.jngyen.bookkeeping.backend.service.user.ExchangeRateService - oldRatePO: null
2024-10-09 14:42:51.036 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.038 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), EUR(String), 1(BigDecimal), 2024-10-09T14:42:51.036576700(LocalDateTime), 2024-10-09T14:42:51.036576700(LocalDateTime), 1(BigDecimal)
2024-10-09 14:42:51.066 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.067 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.067 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), EUR(String), 1(BigDecimal), 2024-10-09T14:42:51.066452400(LocalDateTime), 2024-10-09T14:42:51.066452400(LocalDateTime), 1(BigDecimal)
2024-10-09 14:42:51.076 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.076 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.077 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), AED(String), 4.0302(BigDecimal), 2024-10-09T14:42:51.076207900(LocalDateTime), 2024-10-09T14:42:51.076207900(LocalDateTime), 4.0302(BigDecimal)
2024-10-09 14:42:51.090 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.090 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.091 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), AED(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:51.090134600(LocalDateTime), 2024-10-09T14:42:51.090134600(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:51.101 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.102 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.103 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), AFN(String), 74.839(BigDecimal), 2024-10-09T14:42:51.102540200(LocalDateTime), 2024-10-09T14:42:51.102540200(LocalDateTime), 74.839(BigDecimal)
2024-10-09 14:42:51.116 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.116 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.117 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), AFN(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:51.116439200(LocalDateTime), 2024-10-09T14:42:51.116439200(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:51.131 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.131 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.132 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), ALL(String), 98.8072(BigDecimal), 2024-10-09T14:42:51.131013300(LocalDateTime), 2024-10-09T14:42:51.131013300(LocalDateTime), 98.8072(BigDecimal)
2024-10-09 14:42:51.142 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.143 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.144 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), ALL(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:51.143600300(LocalDateTime), 2024-10-09T14:42:51.143600300(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:51.156 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.156 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.158 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), AMD(String), 425.0141(BigDecimal), 2024-10-09T14:42:51.156162200(LocalDateTime), 2024-10-09T14:42:51.156162200(LocalDateTime), 425.0141(BigDecimal)
2024-10-09 14:42:51.169 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.169 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.171 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), AMD(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:51.169780500(LocalDateTime), 2024-10-09T14:42:51.169780500(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:51.180 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.180 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.184 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), ANG(String), 1.9644(BigDecimal), 2024-10-09T14:42:51.180427900(LocalDateTime), 2024-10-09T14:42:51.180427900(LocalDateTime), 1.9644(BigDecimal)
2024-10-09 14:42:51.194 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.194 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.196 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), ANG(String), EUR(String), 1(BigDecimal), 2024-10-09T14:42:51.194968(LocalDateTime), 2024-10-09T14:42:51.194968(LocalDateTime), 1(BigDecimal)
2024-10-09 14:42:51.208 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.208 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.209 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), AOA(String), 1023.2089(BigDecimal), 2024-10-09T14:42:51.208360800(LocalDateTime), 2024-10-09T14:42:51.208360800(LocalDateTime), 1023.2089(BigDecimal)
2024-10-09 14:42:51.222 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.222 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.223 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), AOA(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:51.222289500(LocalDateTime), 2024-10-09T14:42:51.222289500(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:51.230 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.234 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.235 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), ARS(String), 1070.9776(BigDecimal), 2024-10-09T14:42:51.234175(LocalDateTime), 2024-10-09T14:42:51.234175(LocalDateTime), 1070.9776(BigDecimal)
2024-10-09 14:42:51.247 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.247 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.248 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), ARS(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:51.247108100(LocalDateTime), 2024-10-09T14:42:51.247108100(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:51.260 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.260 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.261 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), AUD(String), 1.6287(BigDecimal), 2024-10-09T14:42:51.260822100(LocalDateTime), 2024-10-09T14:42:51.260822100(LocalDateTime), 1.6287(BigDecimal)
2024-10-09 14:42:51.273 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.273 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.276 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), AUD(String), EUR(String), 1(BigDecimal), 2024-10-09T14:42:51.273715500(LocalDateTime), 2024-10-09T14:42:51.273715500(LocalDateTime), 1(BigDecimal)
2024-10-09 14:42:51.287 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.287 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.289 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), AWG(String), 1.9644(BigDecimal), 2024-10-09T14:42:51.287739300(LocalDateTime), 2024-10-09T14:42:51.287739300(LocalDateTime), 1.9644(BigDecimal)
2024-10-09 14:42:51.301 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.302 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.303 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), AWG(String), EUR(String), 1(BigDecimal), 2024-10-09T14:42:51.302020(LocalDateTime), 2024-10-09T14:42:51.302020(LocalDateTime), 1(BigDecimal)
2024-10-09 14:42:51.315 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.316 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.317 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), AZN(String), 1.8678(BigDecimal), 2024-10-09T14:42:51.315776400(LocalDateTime), 2024-10-09T14:42:51.315776400(LocalDateTime), 1.8678(BigDecimal)
2024-10-09 14:42:51.329 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.329 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.330 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), AZN(String), EUR(String), 1(BigDecimal), 2024-10-09T14:42:51.329288700(LocalDateTime), 2024-10-09T14:42:51.329288700(LocalDateTime), 1(BigDecimal)
2024-10-09 14:42:51.341 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.341 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.343 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), BAM(String), 1.9558(BigDecimal), 2024-10-09T14:42:51.341676(LocalDateTime), 2024-10-09T14:42:51.341676(LocalDateTime), 1.9558(BigDecimal)
2024-10-09 14:42:51.353 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.354 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.354 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), BAM(String), EUR(String), 1(BigDecimal), 2024-10-09T14:42:51.353772900(LocalDateTime), 2024-10-09T14:42:51.353772900(LocalDateTime), 1(BigDecimal)
2024-10-09 14:42:51.367 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.368 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.368 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), BBD(String), 2.1948(BigDecimal), 2024-10-09T14:42:51.367213300(LocalDateTime), 2024-10-09T14:42:51.367213300(LocalDateTime), 2.1948(BigDecimal)
2024-10-09 14:42:51.380 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.380 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.381 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), BBD(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:51.380181400(LocalDateTime), 2024-10-09T14:42:51.380181400(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:51.392 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.393 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.394 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), BDT(String), 131.227(BigDecimal), 2024-10-09T14:42:51.393674900(LocalDateTime), 2024-10-09T14:42:51.393674900(LocalDateTime), 131.227(BigDecimal)
2024-10-09 14:42:51.405 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.405 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.405 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), BDT(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:51.405360200(LocalDateTime), 2024-10-09T14:42:51.405360200(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:51.418 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.419 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.420 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), BGN(String), 1.9558(BigDecimal), 2024-10-09T14:42:51.419263700(LocalDateTime), 2024-10-09T14:42:51.419263700(LocalDateTime), 1.9558(BigDecimal)
2024-10-09 14:42:51.429 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.429 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.433 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), BGN(String), EUR(String), 1(BigDecimal), 2024-10-09T14:42:51.429596600(LocalDateTime), 2024-10-09T14:42:51.429596600(LocalDateTime), 1(BigDecimal)
2024-10-09 14:42:51.447 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.447 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.448 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), BHD(String), 0.4126(BigDecimal), 2024-10-09T14:42:51.447935700(LocalDateTime), 2024-10-09T14:42:51.447935700(LocalDateTime), 0.4126(BigDecimal)
2024-10-09 14:42:51.459 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.459 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.463 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), BHD(String), EUR(String), 2(BigDecimal), 2024-10-09T14:42:51.459425500(LocalDateTime), 2024-10-09T14:42:51.459425500(LocalDateTime), 2(BigDecimal)
2024-10-09 14:42:51.473 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.477 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.478 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), BIF(String), 3192.4562(BigDecimal), 2024-10-09T14:42:51.477140(LocalDateTime), 2024-10-09T14:42:51.477140(LocalDateTime), 3192.4562(BigDecimal)
2024-10-09 14:42:51.490 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.490 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.491 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), BIF(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:51.490502500(LocalDateTime), 2024-10-09T14:42:51.490502500(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:51.502 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.503 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.503 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), BMD(String), 1.0974(BigDecimal), 2024-10-09T14:42:51.502489500(LocalDateTime), 2024-10-09T14:42:51.502489500(LocalDateTime), 1.0974(BigDecimal)
2024-10-09 14:42:51.514 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.514 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.515 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), BMD(String), EUR(String), 1(BigDecimal), 2024-10-09T14:42:51.514001900(LocalDateTime), 2024-10-09T14:42:51.514001900(LocalDateTime), 1(BigDecimal)
2024-10-09 14:42:51.525 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.529 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.529 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), BND(String), 1.4314(BigDecimal), 2024-10-09T14:42:51.525279500(LocalDateTime), 2024-10-09T14:42:51.525279500(LocalDateTime), 1.4314(BigDecimal)
2024-10-09 14:42:51.539 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.539 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.543 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), BND(String), EUR(String), 1(BigDecimal), 2024-10-09T14:42:51.539818600(LocalDateTime), 2024-10-09T14:42:51.539818600(LocalDateTime), 1(BigDecimal)
2024-10-09 14:42:51.554 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.555 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.555 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), BOB(String), 7.6143(BigDecimal), 2024-10-09T14:42:51.555190200(LocalDateTime), 2024-10-09T14:42:51.555190200(LocalDateTime), 7.6143(BigDecimal)
2024-10-09 14:42:51.567 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.568 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.568 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), BOB(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:51.568427400(LocalDateTime), 2024-10-09T14:42:51.568427400(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:51.579 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.580 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.580 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), BRL(String), 6.0403(BigDecimal), 2024-10-09T14:42:51.579430100(LocalDateTime), 2024-10-09T14:42:51.579430100(LocalDateTime), 6.0403(BigDecimal)
2024-10-09 14:42:51.592 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.592 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.593 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), BRL(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:51.592316600(LocalDateTime), 2024-10-09T14:42:51.592316600(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:51.605 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.605 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.605 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), BSD(String), 1.0974(BigDecimal), 2024-10-09T14:42:51.605673600(LocalDateTime), 2024-10-09T14:42:51.605673600(LocalDateTime), 1.0974(BigDecimal)
2024-10-09 14:42:51.617 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.618 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.619 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), BSD(String), EUR(String), 1(BigDecimal), 2024-10-09T14:42:51.617785(LocalDateTime), 2024-10-09T14:42:51.617785(LocalDateTime), 1(BigDecimal)
2024-10-09 14:42:51.629 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.629 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.630 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), BTN(String), 92.1773(BigDecimal), 2024-10-09T14:42:51.629991900(LocalDateTime), 2024-10-09T14:42:51.629991900(LocalDateTime), 92.1773(BigDecimal)
2024-10-09 14:42:51.643 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.643 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.645 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), BTN(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:51.643938500(LocalDateTime), 2024-10-09T14:42:51.643938500(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:51.657 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.657 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.658 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), BWP(String), 14.6043(BigDecimal), 2024-10-09T14:42:51.657073500(LocalDateTime), 2024-10-09T14:42:51.657073500(LocalDateTime), 14.6043(BigDecimal)
2024-10-09 14:42:51.670 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.671 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.672 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), BWP(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:51.671205200(LocalDateTime), 2024-10-09T14:42:51.671205200(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:51.680 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.681 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.681 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), BYN(String), 3.5912(BigDecimal), 2024-10-09T14:42:51.680795900(LocalDateTime), 2024-10-09T14:42:51.680795900(LocalDateTime), 3.5912(BigDecimal)
2024-10-09 14:42:51.694 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.694 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.695 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), BYN(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:51.694511700(LocalDateTime), 2024-10-09T14:42:51.694511700(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:51.706 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.707 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.708 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), BZD(String), 2.1948(BigDecimal), 2024-10-09T14:42:51.707121900(LocalDateTime), 2024-10-09T14:42:51.707121900(LocalDateTime), 2.1948(BigDecimal)
2024-10-09 14:42:51.719 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.720 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.720 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), BZD(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:51.720835300(LocalDateTime), 2024-10-09T14:42:51.720835300(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:51.729 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.729 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.731 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), CAD(String), 1.4981(BigDecimal), 2024-10-09T14:42:51.729706400(LocalDateTime), 2024-10-09T14:42:51.729706400(LocalDateTime), 1.4981(BigDecimal)
2024-10-09 14:42:51.743 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.745 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.745 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CAD(String), EUR(String), 1(BigDecimal), 2024-10-09T14:42:51.743795900(LocalDateTime), 2024-10-09T14:42:51.743795900(LocalDateTime), 1(BigDecimal)
2024-10-09 14:42:51.756 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.756 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.759 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), CDF(String), 3138.2804(BigDecimal), 2024-10-09T14:42:51.756625100(LocalDateTime), 2024-10-09T14:42:51.756625100(LocalDateTime), 3138.2804(BigDecimal)
2024-10-09 14:42:51.770 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.770 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.771 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CDF(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:51.770295100(LocalDateTime), 2024-10-09T14:42:51.770295100(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:51.781 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.782 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.782 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), CHF(String), 0.9411(BigDecimal), 2024-10-09T14:42:51.782408500(LocalDateTime), 2024-10-09T14:42:51.782408500(LocalDateTime), 0.9411(BigDecimal)
2024-10-09 14:42:51.795 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.795 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.796 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CHF(String), EUR(String), 1(BigDecimal), 2024-10-09T14:42:51.795261900(LocalDateTime), 2024-10-09T14:42:51.795261900(LocalDateTime), 1(BigDecimal)
2024-10-09 14:42:51.806 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.806 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.808 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), CLP(String), 1016.6497(BigDecimal), 2024-10-09T14:42:51.806837200(LocalDateTime), 2024-10-09T14:42:51.806837200(LocalDateTime), 1016.6497(BigDecimal)
2024-10-09 14:42:51.819 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.819 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.821 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CLP(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:51.819745500(LocalDateTime), 2024-10-09T14:42:51.819745500(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:51.829 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.832 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.832 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), CNY(String), 7.7546(BigDecimal), 2024-10-09T14:42:51.829835500(LocalDateTime), 2024-10-09T14:42:51.829835500(LocalDateTime), 7.7546(BigDecimal)
2024-10-09 14:42:51.843 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:42:51.843 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.844 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CNY(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:51.843974500(LocalDateTime), 2024-10-09T14:42:51.843974500(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:51.887 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 2
2024-10-09 14:42:51.887 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.889 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), COP(String), 4648.6206(BigDecimal), 2024-10-09T14:42:51.887688600(LocalDateTime), 2024-10-09T14:42:51.887688600(LocalDateTime), 4648.6206(BigDecimal)
2024-10-09 14:42:51.901 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.902 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.903 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), COP(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:51.901908200(LocalDateTime), 2024-10-09T14:42:51.901908200(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:51.907 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.911 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.911 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), CRC(String), 569.9267(BigDecimal), 2024-10-09T14:42:51.911246300(LocalDateTime), 2024-10-09T14:42:51.911246300(LocalDateTime), 569.9267(BigDecimal)
2024-10-09 14:42:51.915 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.915 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.915 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CRC(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:51.915351(LocalDateTime), 2024-10-09T14:42:51.915351(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:51.919 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.919 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.919 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), CUP(String), 26.3377(BigDecimal), 2024-10-09T14:42:51.919769400(LocalDateTime), 2024-10-09T14:42:51.919769400(LocalDateTime), 26.3377(BigDecimal)
2024-10-09 14:42:51.924 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.924 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.925 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CUP(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:51.924445200(LocalDateTime), 2024-10-09T14:42:51.924445200(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:51.926 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.926 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.926 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), CVE(String), 110.265(BigDecimal), 2024-10-09T14:42:51.926764900(LocalDateTime), 2024-10-09T14:42:51.926764900(LocalDateTime), 110.265(BigDecimal)
2024-10-09 14:42:51.933 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.933 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.933 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CVE(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:51.933454400(LocalDateTime), 2024-10-09T14:42:51.933454400(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:51.938 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.938 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.938 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), CZK(String), 25.3253(BigDecimal), 2024-10-09T14:42:51.938679700(LocalDateTime), 2024-10-09T14:42:51.938679700(LocalDateTime), 25.3253(BigDecimal)
2024-10-09 14:42:51.942 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.942 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.942 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), CZK(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:51.942277800(LocalDateTime), 2024-10-09T14:42:51.942277800(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:51.946 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.946 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.946 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), DJF(String), 195.0316(BigDecimal), 2024-10-09T14:42:51.946489700(LocalDateTime), 2024-10-09T14:42:51.946489700(LocalDateTime), 195.0316(BigDecimal)
2024-10-09 14:42:51.950 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.951 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.951 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), DJF(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:51.951026900(LocalDateTime), 2024-10-09T14:42:51.951026900(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:51.956 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.957 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.957 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), DKK(String), 7.4574(BigDecimal), 2024-10-09T14:42:51.957061800(LocalDateTime), 2024-10-09T14:42:51.957061800(LocalDateTime), 7.4574(BigDecimal)
2024-10-09 14:42:51.961 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.961 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.961 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), DKK(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:51.961403400(LocalDateTime), 2024-10-09T14:42:51.961403400(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:51.965 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.965 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.966 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), DOP(String), 66.19(BigDecimal), 2024-10-09T14:42:51.965158800(LocalDateTime), 2024-10-09T14:42:51.965158800(LocalDateTime), 66.19(BigDecimal)
2024-10-09 14:42:51.969 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.970 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.970 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), DOP(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:51.970127700(LocalDateTime), 2024-10-09T14:42:51.970127700(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:51.973 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.975 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.975 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), DZD(String), 146.1702(BigDecimal), 2024-10-09T14:42:51.974893500(LocalDateTime), 2024-10-09T14:42:51.974893500(LocalDateTime), 146.1702(BigDecimal)
2024-10-09 14:42:51.978 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.978 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.978 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), DZD(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:51.978331500(LocalDateTime), 2024-10-09T14:42:51.978331500(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:51.982 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.983 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.983 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), EGP(String), 53.2447(BigDecimal), 2024-10-09T14:42:51.982246500(LocalDateTime), 2024-10-09T14:42:51.982246500(LocalDateTime), 53.2447(BigDecimal)
2024-10-09 14:42:51.987 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.987 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.989 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EGP(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:51.987830(LocalDateTime), 2024-10-09T14:42:51.987830(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:51.992 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.992 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.993 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), ERN(String), 16.461(BigDecimal), 2024-10-09T14:42:51.992668(LocalDateTime), 2024-10-09T14:42:51.992668(LocalDateTime), 16.461(BigDecimal)
2024-10-09 14:42:51.996 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:51.996 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:51.996 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), ERN(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:51.996194(LocalDateTime), 2024-10-09T14:42:51.996194(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.000 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.001 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.001 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), ETB(String), 132.572(BigDecimal), 2024-10-09T14:42:52.000903600(LocalDateTime), 2024-10-09T14:42:52.000903600(LocalDateTime), 132.572(BigDecimal)
2024-10-09 14:42:52.005 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.005 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.006 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), ETB(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.005810(LocalDateTime), 2024-10-09T14:42:52.005810(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.010 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.010 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.010 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), FJD(String), 2.4341(BigDecimal), 2024-10-09T14:42:52.010565200(LocalDateTime), 2024-10-09T14:42:52.010565200(LocalDateTime), 2.4341(BigDecimal)
2024-10-09 14:42:52.014 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.014 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.015 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), FJD(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.014110300(LocalDateTime), 2024-10-09T14:42:52.014110300(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.017 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.018 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.019 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), FKP(String), 0.8381(BigDecimal), 2024-10-09T14:42:52.017823200(LocalDateTime), 2024-10-09T14:42:52.017823200(LocalDateTime), 0.8381(BigDecimal)
2024-10-09 14:42:52.022 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.022 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.023 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), FKP(String), EUR(String), 1(BigDecimal), 2024-10-09T14:42:52.022768300(LocalDateTime), 2024-10-09T14:42:52.022768300(LocalDateTime), 1(BigDecimal)
2024-10-09 14:42:52.026 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.026 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.027 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), FOK(String), 7.4574(BigDecimal), 2024-10-09T14:42:52.026520600(LocalDateTime), 2024-10-09T14:42:52.026520600(LocalDateTime), 7.4574(BigDecimal)
2024-10-09 14:42:52.030 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.030 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.030 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), FOK(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.030837400(LocalDateTime), 2024-10-09T14:42:52.030837400(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.034 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.035 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.035 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), GBP(String), 0.8381(BigDecimal), 2024-10-09T14:42:52.034477700(LocalDateTime), 2024-10-09T14:42:52.034477700(LocalDateTime), 0.8381(BigDecimal)
2024-10-09 14:42:52.039 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.039 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.039 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), GBP(String), EUR(String), 1(BigDecimal), 2024-10-09T14:42:52.039516300(LocalDateTime), 2024-10-09T14:42:52.039516300(LocalDateTime), 1(BigDecimal)
2024-10-09 14:42:52.042 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.043 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.043 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), GEL(String), 3.0033(BigDecimal), 2024-10-09T14:42:52.043539700(LocalDateTime), 2024-10-09T14:42:52.043539700(LocalDateTime), 3.0033(BigDecimal)
2024-10-09 14:42:52.047 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.047 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.047 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), GEL(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.047072300(LocalDateTime), 2024-10-09T14:42:52.047072300(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.051 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.051 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.051 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), GGP(String), 0.8381(BigDecimal), 2024-10-09T14:42:52.051937700(LocalDateTime), 2024-10-09T14:42:52.051937700(LocalDateTime), 0.8381(BigDecimal)
2024-10-09 14:42:52.056 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.056 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.057 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), GGP(String), EUR(String), 1(BigDecimal), 2024-10-09T14:42:52.056646200(LocalDateTime), 2024-10-09T14:42:52.056646200(LocalDateTime), 1(BigDecimal)
2024-10-09 14:42:52.059 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.059 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.059 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), GHS(String), 17.5506(BigDecimal), 2024-10-09T14:42:52.059843400(LocalDateTime), 2024-10-09T14:42:52.059843400(LocalDateTime), 17.5506(BigDecimal)
2024-10-09 14:42:52.063 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.064 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.065 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), GHS(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.064849600(LocalDateTime), 2024-10-09T14:42:52.064849600(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.068 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.069 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.070 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), GIP(String), 0.8381(BigDecimal), 2024-10-09T14:42:52.069256300(LocalDateTime), 2024-10-09T14:42:52.069256300(LocalDateTime), 0.8381(BigDecimal)
2024-10-09 14:42:52.073 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.073 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.073 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), GIP(String), EUR(String), 1(BigDecimal), 2024-10-09T14:42:52.073397900(LocalDateTime), 2024-10-09T14:42:52.073397900(LocalDateTime), 1(BigDecimal)
2024-10-09 14:42:52.076 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.076 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.077 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), GMD(String), 77.6505(BigDecimal), 2024-10-09T14:42:52.076814600(LocalDateTime), 2024-10-09T14:42:52.076814600(LocalDateTime), 77.6505(BigDecimal)
2024-10-09 14:42:52.080 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.080 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.080 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), GMD(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.080057700(LocalDateTime), 2024-10-09T14:42:52.080057700(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.085 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.086 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.086 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), GNF(String), 9526.5476(BigDecimal), 2024-10-09T14:42:52.086088500(LocalDateTime), 2024-10-09T14:42:52.086088500(LocalDateTime), 9526.5476(BigDecimal)
2024-10-09 14:42:52.090 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.090 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.090 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), GNF(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.090142500(LocalDateTime), 2024-10-09T14:42:52.090142500(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.093 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.093 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.093 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), GTQ(String), 8.5075(BigDecimal), 2024-10-09T14:42:52.093947400(LocalDateTime), 2024-10-09T14:42:52.093947400(LocalDateTime), 8.5075(BigDecimal)
2024-10-09 14:42:52.096 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.098 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.098 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), GTQ(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.098126600(LocalDateTime), 2024-10-09T14:42:52.098126600(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.102 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.102 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.103 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), GYD(String), 229.6826(BigDecimal), 2024-10-09T14:42:52.102941600(LocalDateTime), 2024-10-09T14:42:52.102941600(LocalDateTime), 229.6826(BigDecimal)
2024-10-09 14:42:52.107 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.107 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.107 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), GYD(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.107222300(LocalDateTime), 2024-10-09T14:42:52.107222300(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.109 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.109 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.109 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), HKD(String), 8.5343(BigDecimal), 2024-10-09T14:42:52.109701900(LocalDateTime), 2024-10-09T14:42:52.109701900(LocalDateTime), 8.5343(BigDecimal)
2024-10-09 14:42:52.114 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.114 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.114 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), HKD(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.114843500(LocalDateTime), 2024-10-09T14:42:52.114843500(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.119 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.119 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.120 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), HNL(String), 27.3354(BigDecimal), 2024-10-09T14:42:52.119154300(LocalDateTime), 2024-10-09T14:42:52.119154300(LocalDateTime), 27.3354(BigDecimal)
2024-10-09 14:42:52.124 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.124 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.125 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), HNL(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.124007300(LocalDateTime), 2024-10-09T14:42:52.124007300(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.127 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.127 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.128 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), HRK(String), 7.5345(BigDecimal), 2024-10-09T14:42:52.127635900(LocalDateTime), 2024-10-09T14:42:52.127635900(LocalDateTime), 7.5345(BigDecimal)
2024-10-09 14:42:52.131 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.131 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.131 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), HRK(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.131651500(LocalDateTime), 2024-10-09T14:42:52.131651500(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.135 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.136 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.136 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), HTG(String), 144.7397(BigDecimal), 2024-10-09T14:42:52.135611900(LocalDateTime), 2024-10-09T14:42:52.135611900(LocalDateTime), 144.7397(BigDecimal)
2024-10-09 14:42:52.140 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.141 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.142 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), HTG(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.141475900(LocalDateTime), 2024-10-09T14:42:52.141475900(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.145 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.145 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.145 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), HUF(String), 400.1604(BigDecimal), 2024-10-09T14:42:52.145645500(LocalDateTime), 2024-10-09T14:42:52.145645500(LocalDateTime), 400.1604(BigDecimal)
2024-10-09 14:42:52.150 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.150 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.150 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), HUF(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.150035(LocalDateTime), 2024-10-09T14:42:52.150035(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.153 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.154 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.155 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), IDR(String), 17196.192(BigDecimal), 2024-10-09T14:42:52.154811400(LocalDateTime), 2024-10-09T14:42:52.154811400(LocalDateTime), 17196.192(BigDecimal)
2024-10-09 14:42:52.158 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.158 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.158 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), IDR(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.158545500(LocalDateTime), 2024-10-09T14:42:52.158545500(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.163 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.163 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.163 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), ILS(String), 4.1432(BigDecimal), 2024-10-09T14:42:52.163070900(LocalDateTime), 2024-10-09T14:42:52.163070900(LocalDateTime), 4.1432(BigDecimal)
2024-10-09 14:42:52.168 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.169 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.169 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), ILS(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.169145200(LocalDateTime), 2024-10-09T14:42:52.169145200(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.173 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.174 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.174 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), IMP(String), 0.8381(BigDecimal), 2024-10-09T14:42:52.173911400(LocalDateTime), 2024-10-09T14:42:52.173911400(LocalDateTime), 0.8381(BigDecimal)
2024-10-09 14:42:52.178 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.178 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.179 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), IMP(String), EUR(String), 1(BigDecimal), 2024-10-09T14:42:52.178373900(LocalDateTime), 2024-10-09T14:42:52.178373900(LocalDateTime), 1(BigDecimal)
2024-10-09 14:42:52.181 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.183 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.183 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), INR(String), 92.1774(BigDecimal), 2024-10-09T14:42:52.181880200(LocalDateTime), 2024-10-09T14:42:52.181880200(LocalDateTime), 92.1774(BigDecimal)
2024-10-09 14:42:52.187 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.187 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.188 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), INR(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.187811(LocalDateTime), 2024-10-09T14:42:52.187811(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.192 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.192 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.194 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), IQD(String), 1441.1845(BigDecimal), 2024-10-09T14:42:52.192469900(LocalDateTime), 2024-10-09T14:42:52.192469900(LocalDateTime), 1441.1845(BigDecimal)
2024-10-09 14:42:52.197 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.197 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.198 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), IQD(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.197569100(LocalDateTime), 2024-10-09T14:42:52.197569100(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.202 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.202 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.202 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), IRR(String), 46684.32(BigDecimal), 2024-10-09T14:42:52.202169500(LocalDateTime), 2024-10-09T14:42:52.202169500(LocalDateTime), 46684.32(BigDecimal)
2024-10-09 14:42:52.206 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.206 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.207 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), IRR(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.206203900(LocalDateTime), 2024-10-09T14:42:52.206203900(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.210 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.210 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.211 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), ISK(String), 148.5048(BigDecimal), 2024-10-09T14:42:52.210547600(LocalDateTime), 2024-10-09T14:42:52.210547600(LocalDateTime), 148.5048(BigDecimal)
2024-10-09 14:42:52.214 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.214 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.215 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), ISK(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.214627200(LocalDateTime), 2024-10-09T14:42:52.214627200(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.218 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.218 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.220 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), JEP(String), 0.8381(BigDecimal), 2024-10-09T14:42:52.218924900(LocalDateTime), 2024-10-09T14:42:52.218924900(LocalDateTime), 0.8381(BigDecimal)
2024-10-09 14:42:52.223 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.223 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.224 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), JEP(String), EUR(String), 1(BigDecimal), 2024-10-09T14:42:52.223079800(LocalDateTime), 2024-10-09T14:42:52.223079800(LocalDateTime), 1(BigDecimal)
2024-10-09 14:42:52.224 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.224 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.228 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), JMD(String), 173.1622(BigDecimal), 2024-10-09T14:42:52.224691500(LocalDateTime), 2024-10-09T14:42:52.224691500(LocalDateTime), 173.1622(BigDecimal)
2024-10-09 14:42:52.228 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.228 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.228 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), JMD(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.228195400(LocalDateTime), 2024-10-09T14:42:52.228195400(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.235 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.235 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.236 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), JOD(String), 0.7781(BigDecimal), 2024-10-09T14:42:52.235507300(LocalDateTime), 2024-10-09T14:42:52.235507300(LocalDateTime), 0.7781(BigDecimal)
2024-10-09 14:42:52.239 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.240 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.240 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), JOD(String), EUR(String), 1(BigDecimal), 2024-10-09T14:42:52.239484200(LocalDateTime), 2024-10-09T14:42:52.239484200(LocalDateTime), 1(BigDecimal)
2024-10-09 14:42:52.246 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.246 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.247 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), JPY(String), 162.6487(BigDecimal), 2024-10-09T14:42:52.246882900(LocalDateTime), 2024-10-09T14:42:52.246882900(LocalDateTime), 162.6487(BigDecimal)
2024-10-09 14:42:52.250 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.251 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.251 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), JPY(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.251958700(LocalDateTime), 2024-10-09T14:42:52.251958700(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.255 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.256 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.256 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), KES(String), 141.7319(BigDecimal), 2024-10-09T14:42:52.256452700(LocalDateTime), 2024-10-09T14:42:52.256452700(LocalDateTime), 141.7319(BigDecimal)
2024-10-09 14:42:52.259 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.260 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.260 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), KES(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.260429400(LocalDateTime), 2024-10-09T14:42:52.260429400(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.263 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.263 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.263 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), KGS(String), 92.7747(BigDecimal), 2024-10-09T14:42:52.263649(LocalDateTime), 2024-10-09T14:42:52.263649(LocalDateTime), 92.7747(BigDecimal)
2024-10-09 14:42:52.267 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.268 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.268 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), KGS(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.267579600(LocalDateTime), 2024-10-09T14:42:52.267579600(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.271 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.272 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.272 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), KHR(String), 4477.28(BigDecimal), 2024-10-09T14:42:52.271478900(LocalDateTime), 2024-10-09T14:42:52.271478900(LocalDateTime), 4477.28(BigDecimal)
2024-10-09 14:42:52.276 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.276 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.277 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), KHR(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.276718700(LocalDateTime), 2024-10-09T14:42:52.276718700(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.280 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.280 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.280 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), KID(String), 1.6287(BigDecimal), 2024-10-09T14:42:52.280634100(LocalDateTime), 2024-10-09T14:42:52.280634100(LocalDateTime), 1.6287(BigDecimal)
2024-10-09 14:42:52.284 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.284 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.285 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), KID(String), EUR(String), 1(BigDecimal), 2024-10-09T14:42:52.284581200(LocalDateTime), 2024-10-09T14:42:52.284581200(LocalDateTime), 1(BigDecimal)
2024-10-09 14:42:52.288 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.288 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.289 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), KMF(String), 491.9678(BigDecimal), 2024-10-09T14:42:52.288721100(LocalDateTime), 2024-10-09T14:42:52.288721100(LocalDateTime), 491.9678(BigDecimal)
2024-10-09 14:42:52.291 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.293 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.293 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), KMF(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.291997400(LocalDateTime), 2024-10-09T14:42:52.291997400(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.295 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.295 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.295 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), KRW(String), 1478.2274(BigDecimal), 2024-10-09T14:42:52.295552100(LocalDateTime), 2024-10-09T14:42:52.295552100(LocalDateTime), 1478.2274(BigDecimal)
2024-10-09 14:42:52.300 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.300 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.300 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), KRW(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.300255800(LocalDateTime), 2024-10-09T14:42:52.300255800(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.302 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.302 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.302 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), KWD(String), 0.3362(BigDecimal), 2024-10-09T14:42:52.302557200(LocalDateTime), 2024-10-09T14:42:52.302557200(LocalDateTime), 0.3362(BigDecimal)
2024-10-09 14:42:52.307 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.307 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.307 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), KWD(String), EUR(String), 3(BigDecimal), 2024-10-09T14:42:52.307624100(LocalDateTime), 2024-10-09T14:42:52.307624100(LocalDateTime), 3(BigDecimal)
2024-10-09 14:42:52.312 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.312 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.312 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), KYD(String), 0.9145(BigDecimal), 2024-10-09T14:42:52.312543800(LocalDateTime), 2024-10-09T14:42:52.312543800(LocalDateTime), 0.9145(BigDecimal)
2024-10-09 14:42:52.316 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.316 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.316 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), KYD(String), EUR(String), 1(BigDecimal), 2024-10-09T14:42:52.316071100(LocalDateTime), 2024-10-09T14:42:52.316071100(LocalDateTime), 1(BigDecimal)
2024-10-09 14:42:52.319 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.319 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.320 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), KZT(String), 534.7265(BigDecimal), 2024-10-09T14:42:52.319963200(LocalDateTime), 2024-10-09T14:42:52.319963200(LocalDateTime), 534.7265(BigDecimal)
2024-10-09 14:42:52.323 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.323 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.323 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), KZT(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.323986800(LocalDateTime), 2024-10-09T14:42:52.323986800(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.325 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.325 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.325 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), LAK(String), 24130.5908(BigDecimal), 2024-10-09T14:42:52.325699700(LocalDateTime), 2024-10-09T14:42:52.325699700(LocalDateTime), 24130.5908(BigDecimal)
2024-10-09 14:42:52.331 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.331 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.332 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), LAK(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.331360800(LocalDateTime), 2024-10-09T14:42:52.331360800(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.335 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.335 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.336 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), LBP(String), 98217.5749(BigDecimal), 2024-10-09T14:42:52.335684(LocalDateTime), 2024-10-09T14:42:52.335684(LocalDateTime), 98217.5749(BigDecimal)
2024-10-09 14:42:52.340 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.340 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.340 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), LBP(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.340287300(LocalDateTime), 2024-10-09T14:42:52.340287300(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.344 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.344 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.344 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), LKR(String), 321.9086(BigDecimal), 2024-10-09T14:42:52.344332400(LocalDateTime), 2024-10-09T14:42:52.344332400(LocalDateTime), 321.9086(BigDecimal)
2024-10-09 14:42:52.347 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.347 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.348 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), LKR(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.347699300(LocalDateTime), 2024-10-09T14:42:52.347699300(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.351 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.351 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.352 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), LRD(String), 212.058(BigDecimal), 2024-10-09T14:42:52.351137200(LocalDateTime), 2024-10-09T14:42:52.351137200(LocalDateTime), 212.058(BigDecimal)
2024-10-09 14:42:52.356 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.356 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.356 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), LRD(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.356119600(LocalDateTime), 2024-10-09T14:42:52.356119600(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.360 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.360 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.360 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), LSL(String), 19.2707(BigDecimal), 2024-10-09T14:42:52.360112500(LocalDateTime), 2024-10-09T14:42:52.360112500(LocalDateTime), 19.2707(BigDecimal)
2024-10-09 14:42:52.363 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.363 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.363 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), LSL(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.363869500(LocalDateTime), 2024-10-09T14:42:52.363869500(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.367 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.367 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.368 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), LYD(String), 5.2535(BigDecimal), 2024-10-09T14:42:52.367799800(LocalDateTime), 2024-10-09T14:42:52.367799800(LocalDateTime), 5.2535(BigDecimal)
2024-10-09 14:42:52.370 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.370 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.370 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), LYD(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.370288200(LocalDateTime), 2024-10-09T14:42:52.370288200(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.376 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.377 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.377 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), MAD(String), 10.7678(BigDecimal), 2024-10-09T14:42:52.376947(LocalDateTime), 2024-10-09T14:42:52.376947(LocalDateTime), 10.7678(BigDecimal)
2024-10-09 14:42:52.379 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.379 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.379 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), MAD(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.379621300(LocalDateTime), 2024-10-09T14:42:52.379621300(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.384 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.384 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.385 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), MDL(String), 19.2999(BigDecimal), 2024-10-09T14:42:52.384943300(LocalDateTime), 2024-10-09T14:42:52.384943300(LocalDateTime), 19.2999(BigDecimal)
2024-10-09 14:42:52.389 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.389 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.389 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), MDL(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.389248(LocalDateTime), 2024-10-09T14:42:52.389248(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.393 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.393 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.394 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), MGA(String), 4943.4463(BigDecimal), 2024-10-09T14:42:52.393137500(LocalDateTime), 2024-10-09T14:42:52.393137500(LocalDateTime), 4943.4463(BigDecimal)
2024-10-09 14:42:52.396 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.396 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.396 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), MGA(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.396887900(LocalDateTime), 2024-10-09T14:42:52.396887900(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.400 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.401 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.401 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), MKD(String), 61.495(BigDecimal), 2024-10-09T14:42:52.401118900(LocalDateTime), 2024-10-09T14:42:52.401118900(LocalDateTime), 61.495(BigDecimal)
2024-10-09 14:42:52.404 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.404 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.404 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), MKD(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.404580800(LocalDateTime), 2024-10-09T14:42:52.404580800(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.409 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.409 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.410 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), MMK(String), 3136.7534(BigDecimal), 2024-10-09T14:42:52.409185800(LocalDateTime), 2024-10-09T14:42:52.409185800(LocalDateTime), 3136.7534(BigDecimal)
2024-10-09 14:42:52.411 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.411 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.414 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), MMK(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.411869800(LocalDateTime), 2024-10-09T14:42:52.411869800(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.417 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.417 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.418 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), MNT(String), 3705.2573(BigDecimal), 2024-10-09T14:42:52.417823200(LocalDateTime), 2024-10-09T14:42:52.417823200(LocalDateTime), 3705.2573(BigDecimal)
2024-10-09 14:42:52.422 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.423 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.423 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), MNT(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.423158400(LocalDateTime), 2024-10-09T14:42:52.423158400(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.426 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.426 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.426 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), MOP(String), 8.7905(BigDecimal), 2024-10-09T14:42:52.426691(LocalDateTime), 2024-10-09T14:42:52.426691(LocalDateTime), 8.7905(BigDecimal)
2024-10-09 14:42:52.430 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.430 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.431 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), MOP(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.430448300(LocalDateTime), 2024-10-09T14:42:52.430448300(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.434 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.435 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.435 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), MRU(String), 43.4013(BigDecimal), 2024-10-09T14:42:52.435581(LocalDateTime), 2024-10-09T14:42:52.435642600(LocalDateTime), 43.4013(BigDecimal)
2024-10-09 14:42:52.439 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.439 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.439 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), MRU(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.439903200(LocalDateTime), 2024-10-09T14:42:52.439903200(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.443 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.443 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.444 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), MUR(String), 50.9216(BigDecimal), 2024-10-09T14:42:52.443887600(LocalDateTime), 2024-10-09T14:42:52.443887600(LocalDateTime), 50.9216(BigDecimal)
2024-10-09 14:42:52.447 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.447 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.447 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), MUR(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.447047100(LocalDateTime), 2024-10-09T14:42:52.447047100(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.450 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.450 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.451 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), MVR(String), 16.963(BigDecimal), 2024-10-09T14:42:52.450918800(LocalDateTime), 2024-10-09T14:42:52.450918800(LocalDateTime), 16.963(BigDecimal)
2024-10-09 14:42:52.455 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.455 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.455 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), MVR(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.455355900(LocalDateTime), 2024-10-09T14:42:52.455355900(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.459 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.459 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.459 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), MWK(String), 1915.9035(BigDecimal), 2024-10-09T14:42:52.459491900(LocalDateTime), 2024-10-09T14:42:52.459491900(LocalDateTime), 1915.9035(BigDecimal)
2024-10-09 14:42:52.463 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.463 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.465 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), MWK(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.463496100(LocalDateTime), 2024-10-09T14:42:52.463496100(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.469 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.470 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.470 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), MXN(String), 21.2357(BigDecimal), 2024-10-09T14:42:52.470080200(LocalDateTime), 2024-10-09T14:42:52.470080200(LocalDateTime), 21.2357(BigDecimal)
2024-10-09 14:42:52.474 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.474 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.474 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), MXN(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.474467200(LocalDateTime), 2024-10-09T14:42:52.474467200(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.478 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.478 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.478 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), MYR(String), 4.7076(BigDecimal), 2024-10-09T14:42:52.478723600(LocalDateTime), 2024-10-09T14:42:52.478723600(LocalDateTime), 4.7076(BigDecimal)
2024-10-09 14:42:52.483 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.484 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.484 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), MYR(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.483018100(LocalDateTime), 2024-10-09T14:42:52.483018100(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.489 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.489 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.489 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), MZN(String), 70.1782(BigDecimal), 2024-10-09T14:42:52.489432500(LocalDateTime), 2024-10-09T14:42:52.489432500(LocalDateTime), 70.1782(BigDecimal)
2024-10-09 14:42:52.493 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.493 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.493 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), MZN(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.493355400(LocalDateTime), 2024-10-09T14:42:52.493355400(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.496 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.496 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.497 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), NAD(String), 19.2707(BigDecimal), 2024-10-09T14:42:52.496905700(LocalDateTime), 2024-10-09T14:42:52.496905700(LocalDateTime), 19.2707(BigDecimal)
2024-10-09 14:42:52.500 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.500 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.500 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), NAD(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.500539(LocalDateTime), 2024-10-09T14:42:52.500539(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.504 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.505 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.505 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), NGN(String), 1777.9427(BigDecimal), 2024-10-09T14:42:52.505098400(LocalDateTime), 2024-10-09T14:42:52.505098400(LocalDateTime), 1777.9427(BigDecimal)
2024-10-09 14:42:52.508 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.508 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.508 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), NGN(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.508785(LocalDateTime), 2024-10-09T14:42:52.508785(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.512 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.512 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.513 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), NIO(String), 40.4286(BigDecimal), 2024-10-09T14:42:52.512667700(LocalDateTime), 2024-10-09T14:42:52.512667700(LocalDateTime), 40.4286(BigDecimal)
2024-10-09 14:42:52.516 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.516 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.516 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), NIO(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.516183600(LocalDateTime), 2024-10-09T14:42:52.516183600(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.520 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.520 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.520 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), NOK(String), 11.731(BigDecimal), 2024-10-09T14:42:52.520378400(LocalDateTime), 2024-10-09T14:42:52.520378400(LocalDateTime), 11.731(BigDecimal)
2024-10-09 14:42:52.524 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.524 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.525 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), NOK(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.524589600(LocalDateTime), 2024-10-09T14:42:52.524589600(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.528 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.528 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.528 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), NPR(String), 147.4838(BigDecimal), 2024-10-09T14:42:52.528816800(LocalDateTime), 2024-10-09T14:42:52.528816800(LocalDateTime), 147.4838(BigDecimal)
2024-10-09 14:42:52.532 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.532 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.532 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), NPR(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.532420500(LocalDateTime), 2024-10-09T14:42:52.532420500(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.536 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.536 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.536 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), NZD(String), 1.7921(BigDecimal), 2024-10-09T14:42:52.536482600(LocalDateTime), 2024-10-09T14:42:52.536482600(LocalDateTime), 1.7921(BigDecimal)
2024-10-09 14:42:52.540 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.540 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.540 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), NZD(String), EUR(String), 1(BigDecimal), 2024-10-09T14:42:52.540717800(LocalDateTime), 2024-10-09T14:42:52.540717800(LocalDateTime), 1(BigDecimal)
2024-10-09 14:42:52.544 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.544 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.544 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), OMR(String), 0.4219(BigDecimal), 2024-10-09T14:42:52.544991600(LocalDateTime), 2024-10-09T14:42:52.544991600(LocalDateTime), 0.4219(BigDecimal)
2024-10-09 14:42:52.548 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.548 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.548 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), OMR(String), EUR(String), 2(BigDecimal), 2024-10-09T14:42:52.548590800(LocalDateTime), 2024-10-09T14:42:52.548590800(LocalDateTime), 2(BigDecimal)
2024-10-09 14:42:52.552 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.552 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.554 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), PAB(String), 1.0974(BigDecimal), 2024-10-09T14:42:52.552907100(LocalDateTime), 2024-10-09T14:42:52.552907100(LocalDateTime), 1.0974(BigDecimal)
2024-10-09 14:42:52.557 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.557 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.557 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), PAB(String), EUR(String), 1(BigDecimal), 2024-10-09T14:42:52.557191400(LocalDateTime), 2024-10-09T14:42:52.557191400(LocalDateTime), 1(BigDecimal)
2024-10-09 14:42:52.561 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.561 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.561 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), PEN(String), 4.0896(BigDecimal), 2024-10-09T14:42:52.561208800(LocalDateTime), 2024-10-09T14:42:52.561208800(LocalDateTime), 4.0896(BigDecimal)
2024-10-09 14:42:52.564 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.564 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.564 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), PEN(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.564320300(LocalDateTime), 2024-10-09T14:42:52.564320300(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.568 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.568 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.569 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), PGK(String), 4.3301(BigDecimal), 2024-10-09T14:42:52.568537100(LocalDateTime), 2024-10-09T14:42:52.568537100(LocalDateTime), 4.3301(BigDecimal)
2024-10-09 14:42:52.569 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.569 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.573 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), PGK(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.569509100(LocalDateTime), 2024-10-09T14:42:52.569509100(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.576 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.576 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.576 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), PHP(String), 62.3926(BigDecimal), 2024-10-09T14:42:52.576650100(LocalDateTime), 2024-10-09T14:42:52.576650100(LocalDateTime), 62.3926(BigDecimal)
2024-10-09 14:42:52.579 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.580 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.580 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), PHP(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.579632500(LocalDateTime), 2024-10-09T14:42:52.579632500(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.584 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.585 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.585 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), PKR(String), 305.1729(BigDecimal), 2024-10-09T14:42:52.584906900(LocalDateTime), 2024-10-09T14:42:52.584906900(LocalDateTime), 305.1729(BigDecimal)
2024-10-09 14:42:52.589 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.589 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.589 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), PKR(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.589360100(LocalDateTime), 2024-10-09T14:42:52.589360100(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.592 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.592 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.593 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), PLN(String), 4.3113(BigDecimal), 2024-10-09T14:42:52.592730300(LocalDateTime), 2024-10-09T14:42:52.592730300(LocalDateTime), 4.3113(BigDecimal)
2024-10-09 14:42:52.596 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.596 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.596 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), PLN(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.596941900(LocalDateTime), 2024-10-09T14:42:52.596941900(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.600 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.601 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.601 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), PYG(String), 8598.8706(BigDecimal), 2024-10-09T14:42:52.601144200(LocalDateTime), 2024-10-09T14:42:52.601144200(LocalDateTime), 8598.8706(BigDecimal)
2024-10-09 14:42:52.604 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.604 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.606 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), PYG(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.604863500(LocalDateTime), 2024-10-09T14:42:52.604863500(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.609 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.609 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.610 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), QAR(String), 3.9945(BigDecimal), 2024-10-09T14:42:52.609110400(LocalDateTime), 2024-10-09T14:42:52.609110400(LocalDateTime), 3.9945(BigDecimal)
2024-10-09 14:42:52.612 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.613 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.613 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), QAR(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.613300500(LocalDateTime), 2024-10-09T14:42:52.613300500(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.617 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.617 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.617 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), RON(String), 4.9779(BigDecimal), 2024-10-09T14:42:52.617034900(LocalDateTime), 2024-10-09T14:42:52.617034900(LocalDateTime), 4.9779(BigDecimal)
2024-10-09 14:42:52.621 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.621 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.622 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), RON(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.621370800(LocalDateTime), 2024-10-09T14:42:52.621370800(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.626 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.626 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.626 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), RSD(String), 117.0423(BigDecimal), 2024-10-09T14:42:52.626284900(LocalDateTime), 2024-10-09T14:42:52.626284900(LocalDateTime), 117.0423(BigDecimal)
2024-10-09 14:42:52.627 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.627 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.627 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), RSD(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.627441800(LocalDateTime), 2024-10-09T14:42:52.627441800(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.633 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.633 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.634 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), RUB(String), 105.8461(BigDecimal), 2024-10-09T14:42:52.633260100(LocalDateTime), 2024-10-09T14:42:52.633260100(LocalDateTime), 105.8461(BigDecimal)
2024-10-09 14:42:52.637 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.638 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.638 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), RUB(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.638515400(LocalDateTime), 2024-10-09T14:42:52.638515400(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.642 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.642 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.642 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), RWF(String), 1523.0507(BigDecimal), 2024-10-09T14:42:52.642545700(LocalDateTime), 2024-10-09T14:42:52.642545700(LocalDateTime), 1523.0507(BigDecimal)
2024-10-09 14:42:52.645 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.645 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.645 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), RWF(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.645522700(LocalDateTime), 2024-10-09T14:42:52.645522700(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.648 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.649 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.649 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), SAR(String), 4.1153(BigDecimal), 2024-10-09T14:42:52.649465100(LocalDateTime), 2024-10-09T14:42:52.649465100(LocalDateTime), 4.1153(BigDecimal)
2024-10-09 14:42:52.653 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.653 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.654 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), SAR(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.653112200(LocalDateTime), 2024-10-09T14:42:52.653112200(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.657 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.657 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.657 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), SBD(String), 9.3115(BigDecimal), 2024-10-09T14:42:52.657253700(LocalDateTime), 2024-10-09T14:42:52.657253700(LocalDateTime), 9.3115(BigDecimal)
2024-10-09 14:42:52.660 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.661 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.661 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), SBD(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.660478700(LocalDateTime), 2024-10-09T14:42:52.660478700(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.663 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.663 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.665 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), SCR(String), 15.258(BigDecimal), 2024-10-09T14:42:52.663936700(LocalDateTime), 2024-10-09T14:42:52.663936700(LocalDateTime), 15.258(BigDecimal)
2024-10-09 14:42:52.668 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.668 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.670 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), SCR(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.668464600(LocalDateTime), 2024-10-09T14:42:52.668464600(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.673 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.673 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.673 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), SDG(String), 490.9298(BigDecimal), 2024-10-09T14:42:52.673209500(LocalDateTime), 2024-10-09T14:42:52.673209500(LocalDateTime), 490.9298(BigDecimal)
2024-10-09 14:42:52.675 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.675 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.675 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), SDG(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.675477100(LocalDateTime), 2024-10-09T14:42:52.675477100(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.680 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.680 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.680 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), SEK(String), 11.3522(BigDecimal), 2024-10-09T14:42:52.680346900(LocalDateTime), 2024-10-09T14:42:52.680346900(LocalDateTime), 11.3522(BigDecimal)
2024-10-09 14:42:52.684 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.685 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.685 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), SEK(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.684804100(LocalDateTime), 2024-10-09T14:42:52.684804100(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.688 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.689 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.689 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), SGD(String), 1.4314(BigDecimal), 2024-10-09T14:42:52.688382800(LocalDateTime), 2024-10-09T14:42:52.688382800(LocalDateTime), 1.4314(BigDecimal)
2024-10-09 14:42:52.692 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.692 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.693 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), SGD(String), EUR(String), 1(BigDecimal), 2024-10-09T14:42:52.692968(LocalDateTime), 2024-10-09T14:42:52.692968(LocalDateTime), 1(BigDecimal)
2024-10-09 14:42:52.697 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.697 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.697 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), SHP(String), 0.8381(BigDecimal), 2024-10-09T14:42:52.697256300(LocalDateTime), 2024-10-09T14:42:52.697256300(LocalDateTime), 0.8381(BigDecimal)
2024-10-09 14:42:52.702 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.702 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.703 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), SHP(String), EUR(String), 1(BigDecimal), 2024-10-09T14:42:52.702106200(LocalDateTime), 2024-10-09T14:42:52.702106200(LocalDateTime), 1(BigDecimal)
2024-10-09 14:42:52.707 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.707 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.707 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), SLE(String), 24.7863(BigDecimal), 2024-10-09T14:42:52.707017(LocalDateTime), 2024-10-09T14:42:52.707017(LocalDateTime), 24.7863(BigDecimal)
2024-10-09 14:42:52.711 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.711 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.711 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), SLE(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.711623600(LocalDateTime), 2024-10-09T14:42:52.711623600(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.715 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.715 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.716 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), SLL(String), 24786.2524(BigDecimal), 2024-10-09T14:42:52.715615200(LocalDateTime), 2024-10-09T14:42:52.715615200(LocalDateTime), 24786.2524(BigDecimal)
2024-10-09 14:42:52.719 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.719 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.720 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), SLL(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.719772200(LocalDateTime), 2024-10-09T14:42:52.719772200(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.724 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.724 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.725 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), SOS(String), 627.6561(BigDecimal), 2024-10-09T14:42:52.724766600(LocalDateTime), 2024-10-09T14:42:52.724766600(LocalDateTime), 627.6561(BigDecimal)
2024-10-09 14:42:52.728 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.728 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.728 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), SOS(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.728929700(LocalDateTime), 2024-10-09T14:42:52.728929700(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.732 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.732 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.732 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), SRD(String), 34.7831(BigDecimal), 2024-10-09T14:42:52.732636200(LocalDateTime), 2024-10-09T14:42:52.732636200(LocalDateTime), 34.7831(BigDecimal)
2024-10-09 14:42:52.736 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.736 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.736 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), SRD(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.736789900(LocalDateTime), 2024-10-09T14:42:52.736789900(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.739 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.739 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.739 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), SSP(String), 3514.1343(BigDecimal), 2024-10-09T14:42:52.739561700(LocalDateTime), 2024-10-09T14:42:52.739561700(LocalDateTime), 3514.1343(BigDecimal)
2024-10-09 14:42:52.744 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.744 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.744 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), SSP(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.744089300(LocalDateTime), 2024-10-09T14:42:52.744089300(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.748 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.748 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.748 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), STN(String), 24.5(BigDecimal), 2024-10-09T14:42:52.748129900(LocalDateTime), 2024-10-09T14:42:52.748129900(LocalDateTime), 24.5(BigDecimal)
2024-10-09 14:42:52.751 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.751 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.751 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), STN(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.751926100(LocalDateTime), 2024-10-09T14:42:52.751926100(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.756 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.756 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.757 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), SYP(String), 14143.0746(BigDecimal), 2024-10-09T14:42:52.756108600(LocalDateTime), 2024-10-09T14:42:52.756108600(LocalDateTime), 14143.0746(BigDecimal)
2024-10-09 14:42:52.760 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.760 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.760 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), SYP(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.760187900(LocalDateTime), 2024-10-09T14:42:52.760187900(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.764 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.764 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.764 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), SZL(String), 19.2707(BigDecimal), 2024-10-09T14:42:52.764175300(LocalDateTime), 2024-10-09T14:42:52.764175300(LocalDateTime), 19.2707(BigDecimal)
2024-10-09 14:42:52.768 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.768 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.768 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), SZL(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.768700700(LocalDateTime), 2024-10-09T14:42:52.768700700(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.772 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.772 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.772 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), THB(String), 36.807(BigDecimal), 2024-10-09T14:42:52.772687900(LocalDateTime), 2024-10-09T14:42:52.772687900(LocalDateTime), 36.807(BigDecimal)
2024-10-09 14:42:52.776 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.776 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.777 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), THB(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.776713700(LocalDateTime), 2024-10-09T14:42:52.776713700(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.780 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.780 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.780 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), TJS(String), 11.6906(BigDecimal), 2024-10-09T14:42:52.780807400(LocalDateTime), 2024-10-09T14:42:52.780807400(LocalDateTime), 11.6906(BigDecimal)
2024-10-09 14:42:52.784 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.784 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.784 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), TJS(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.784500100(LocalDateTime), 2024-10-09T14:42:52.784500100(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.787 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.787 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.789 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), TMT(String), 3.8449(BigDecimal), 2024-10-09T14:42:52.787896800(LocalDateTime), 2024-10-09T14:42:52.787896800(LocalDateTime), 3.8449(BigDecimal)
2024-10-09 14:42:52.792 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.792 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.792 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), TMT(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.792809600(LocalDateTime), 2024-10-09T14:42:52.792809600(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.796 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.796 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.796 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), TND(String), 3.3715(BigDecimal), 2024-10-09T14:42:52.796778800(LocalDateTime), 2024-10-09T14:42:52.796778800(LocalDateTime), 3.3715(BigDecimal)
2024-10-09 14:42:52.800 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.801 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.801 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), TND(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.800903700(LocalDateTime), 2024-10-09T14:42:52.800903700(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.804 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.804 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.805 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), TOP(String), 2.5526(BigDecimal), 2024-10-09T14:42:52.804377(LocalDateTime), 2024-10-09T14:42:52.804377(LocalDateTime), 2.5526(BigDecimal)
2024-10-09 14:42:52.807 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.808 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.808 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), TOP(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.808414500(LocalDateTime), 2024-10-09T14:42:52.808414500(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.812 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.812 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.812 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), TRY(String), 37.6218(BigDecimal), 2024-10-09T14:42:52.812528400(LocalDateTime), 2024-10-09T14:42:52.812528400(LocalDateTime), 37.6218(BigDecimal)
2024-10-09 14:42:52.816 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.816 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.817 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), TRY(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.816271900(LocalDateTime), 2024-10-09T14:42:52.816271900(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.820 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.820 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.821 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), TTD(String), 7.6532(BigDecimal), 2024-10-09T14:42:52.820752800(LocalDateTime), 2024-10-09T14:42:52.820752800(LocalDateTime), 7.6532(BigDecimal)
2024-10-09 14:42:52.825 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.825 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.825 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), TTD(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.825203900(LocalDateTime), 2024-10-09T14:42:52.825203900(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.829 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.829 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.830 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), TVD(String), 1.6287(BigDecimal), 2024-10-09T14:42:52.829231600(LocalDateTime), 2024-10-09T14:42:52.829231600(LocalDateTime), 1.6287(BigDecimal)
2024-10-09 14:42:52.833 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.833 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.834 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), TVD(String), EUR(String), 1(BigDecimal), 2024-10-09T14:42:52.833649(LocalDateTime), 2024-10-09T14:42:52.833649(LocalDateTime), 1(BigDecimal)
2024-10-09 14:42:52.836 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.837 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.837 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), TWD(String), 35.3558(BigDecimal), 2024-10-09T14:42:52.836826(LocalDateTime), 2024-10-09T14:42:52.836826(LocalDateTime), 35.3558(BigDecimal)
2024-10-09 14:42:52.838 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.838 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.838 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), TWD(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.838887500(LocalDateTime), 2024-10-09T14:42:52.838887500(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.845 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.845 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.845 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), TZS(String), 2993.5189(BigDecimal), 2024-10-09T14:42:52.845638(LocalDateTime), 2024-10-09T14:42:52.845638(LocalDateTime), 2993.5189(BigDecimal)
2024-10-09 14:42:52.849 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.849 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.850 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), TZS(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.849649500(LocalDateTime), 2024-10-09T14:42:52.849649500(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.852 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.852 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.852 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), UAH(String), 45.2493(BigDecimal), 2024-10-09T14:42:52.852126500(LocalDateTime), 2024-10-09T14:42:52.852126500(LocalDateTime), 45.2493(BigDecimal)
2024-10-09 14:42:52.857 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.857 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.857 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), UAH(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.857320(LocalDateTime), 2024-10-09T14:42:52.857320(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.861 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.861 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.861 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), UGX(String), 4037.7404(BigDecimal), 2024-10-09T14:42:52.861072500(LocalDateTime), 2024-10-09T14:42:52.861072500(LocalDateTime), 4037.7404(BigDecimal)
2024-10-09 14:42:52.865 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.865 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.866 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), UGX(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.865007500(LocalDateTime), 2024-10-09T14:42:52.865007500(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.868 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.869 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.870 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), USD(String), 1.0974(BigDecimal), 2024-10-09T14:42:52.869441(LocalDateTime), 2024-10-09T14:42:52.869441(LocalDateTime), 1.0974(BigDecimal)
2024-10-09 14:42:52.873 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.873 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.874 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), USD(String), EUR(String), 1(BigDecimal), 2024-10-09T14:42:52.873670700(LocalDateTime), 2024-10-09T14:42:52.873670700(LocalDateTime), 1(BigDecimal)
2024-10-09 14:42:52.876 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.876 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.876 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), UYU(String), 45.5624(BigDecimal), 2024-10-09T14:42:52.876283500(LocalDateTime), 2024-10-09T14:42:52.876283500(LocalDateTime), 45.5624(BigDecimal)
2024-10-09 14:42:52.880 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.880 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.881 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), UYU(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.880694500(LocalDateTime), 2024-10-09T14:42:52.880694500(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.884 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.884 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.885 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), UZS(String), 14084.2812(BigDecimal), 2024-10-09T14:42:52.884492(LocalDateTime), 2024-10-09T14:42:52.884492(LocalDateTime), 14084.2812(BigDecimal)
2024-10-09 14:42:52.888 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.888 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.888 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), UZS(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.888716100(LocalDateTime), 2024-10-09T14:42:52.888716100(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.890 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.890 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.890 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), VES(String), 40.665(BigDecimal), 2024-10-09T14:42:52.890503200(LocalDateTime), 2024-10-09T14:42:52.890503200(LocalDateTime), 40.665(BigDecimal)
2024-10-09 14:42:52.896 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.896 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.896 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), VES(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.896805300(LocalDateTime), 2024-10-09T14:42:52.896805300(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.900 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.900 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.900 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), VND(String), 27274.1821(BigDecimal), 2024-10-09T14:42:52.900062700(LocalDateTime), 2024-10-09T14:42:52.900062700(LocalDateTime), 27274.1821(BigDecimal)
2024-10-09 14:42:52.904 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.904 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.904 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), VND(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.904244700(LocalDateTime), 2024-10-09T14:42:52.904244700(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.908 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.908 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.908 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), VUV(String), 129.505(BigDecimal), 2024-10-09T14:42:52.908624700(LocalDateTime), 2024-10-09T14:42:52.908624700(LocalDateTime), 129.505(BigDecimal)
2024-10-09 14:42:52.912 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.912 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.912 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), VUV(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.912944900(LocalDateTime), 2024-10-09T14:42:52.912944900(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.916 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.916 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.916 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), WST(String), 2.9655(BigDecimal), 2024-10-09T14:42:52.916653300(LocalDateTime), 2024-10-09T14:42:52.916653300(LocalDateTime), 2.9655(BigDecimal)
2024-10-09 14:42:52.919 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.919 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.919 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), WST(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.919284800(LocalDateTime), 2024-10-09T14:42:52.919284800(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.924 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.924 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.924 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), XAF(String), 655.957(BigDecimal), 2024-10-09T14:42:52.924920800(LocalDateTime), 2024-10-09T14:42:52.924920800(LocalDateTime), 655.957(BigDecimal)
2024-10-09 14:42:52.928 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.928 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.928 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), XAF(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.928980300(LocalDateTime), 2024-10-09T14:42:52.928980300(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.932 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.932 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.932 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), XCD(String), 2.963(BigDecimal), 2024-10-09T14:42:52.932614500(LocalDateTime), 2024-10-09T14:42:52.932614500(LocalDateTime), 2.963(BigDecimal)
2024-10-09 14:42:52.936 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.936 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.936 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), XCD(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.936402600(LocalDateTime), 2024-10-09T14:42:52.936402600(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.940 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.940 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.941 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), XDR(String), 0.8198(BigDecimal), 2024-10-09T14:42:52.940440700(LocalDateTime), 2024-10-09T14:42:52.940440700(LocalDateTime), 0.8198(BigDecimal)
2024-10-09 14:42:52.944 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.944 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.944 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), XDR(String), EUR(String), 1(BigDecimal), 2024-10-09T14:42:52.944539800(LocalDateTime), 2024-10-09T14:42:52.944539800(LocalDateTime), 1(BigDecimal)
2024-10-09 14:42:52.947 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.947 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.947 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), XOF(String), 655.957(BigDecimal), 2024-10-09T14:42:52.947925800(LocalDateTime), 2024-10-09T14:42:52.947925800(LocalDateTime), 655.957(BigDecimal)
2024-10-09 14:42:52.951 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.952 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.952 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), XOF(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.951726(LocalDateTime), 2024-10-09T14:42:52.951726(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.956 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.956 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.957 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), XPF(String), 119.332(BigDecimal), 2024-10-09T14:42:52.956306300(LocalDateTime), 2024-10-09T14:42:52.956306300(LocalDateTime), 119.332(BigDecimal)
2024-10-09 14:42:52.959 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.959 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.959 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), XPF(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.959187700(LocalDateTime), 2024-10-09T14:42:52.959187700(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.962 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.962 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.962 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), YER(String), 274.873(BigDecimal), 2024-10-09T14:42:52.962694100(LocalDateTime), 2024-10-09T14:42:52.962694100(LocalDateTime), 274.873(BigDecimal)
2024-10-09 14:42:52.967 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.967 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.968 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), YER(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.967729400(LocalDateTime), 2024-10-09T14:42:52.967729400(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.973 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.974 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.974 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), ZAR(String), 19.2675(BigDecimal), 2024-10-09T14:42:52.974617300(LocalDateTime), 2024-10-09T14:42:52.974617300(LocalDateTime), 19.2675(BigDecimal)
2024-10-09 14:42:52.978 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.978 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.978 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), ZAR(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.978457500(LocalDateTime), 2024-10-09T14:42:52.978457500(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.981 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.982 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.982 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), ZMW(String), 29.2273(BigDecimal), 2024-10-09T14:42:52.982253400(LocalDateTime), 2024-10-09T14:42:52.982253400(LocalDateTime), 29.2273(BigDecimal)
2024-10-09 14:42:52.985 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.985 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.986 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), ZMW(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.985421(LocalDateTime), 2024-10-09T14:42:52.985421(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.989 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.989 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.990 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), EUR(String), ZWL(String), 28.4124(BigDecimal), 2024-10-09T14:42:52.989931100(LocalDateTime), 2024-10-09T14:42:52.989931100(LocalDateTime), 28.4124(BigDecimal)
2024-10-09 14:42:52.993 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:52.994 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==>  Preparing: INSERT INTO exchange_rate (id, base_currency, target_currency, rate, gmt_create, gmt_modified) VALUES (?, ?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE rate = ?, gmt_modified = NOW()
2024-10-09 14:42:52.994 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - ==> Parameters: 0(Integer), ZWL(String), EUR(String), 0(BigDecimal), 2024-10-09T14:42:52.994266100(LocalDateTime), 2024-10-09T14:42:52.994266100(LocalDateTime), 0(BigDecimal)
2024-10-09 14:42:52.997 [reactor-http-nio-2] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.updateExchangeRate - <==    Updates: 1
2024-10-09 14:42:56.213 [http-nio-8080-exec-9] DEBUG com.jngyen.bookkeeping.backend.mapper.UserConfigMapper.getUserConfigByUuid - ==>  Preparing: SELECT id, user_uuid, home_currency,home_currency_color, is_use_custom_rate, gmt_create, gmt_modified FROM user_config WHERE user_uuid = ?
2024-10-09 14:42:56.214 [http-nio-8080-exec-9] DEBUG com.jngyen.bookkeeping.backend.mapper.UserConfigMapper.getUserConfigByUuid - ==> Parameters: 00497f8d-563c-4e6d-9e92-ab0f7bed72be(String)
2024-10-09 14:42:56.215 [http-nio-8080-exec-9] DEBUG com.jngyen.bookkeeping.backend.mapper.UserConfigMapper.getUserConfigByUuid - <==      Total: 1
2024-10-09 14:42:56.216 [http-nio-8080-exec-9] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.getExchangeRate - ==>  Preparing: SELECT id, base_currency, target_currency, rate, gmt_create, gmt_modified FROM exchange_rate WHERE base_currency = ? AND target_currency = ?
2024-10-09 14:42:56.216 [http-nio-8080-exec-9] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.getExchangeRate - ==> Parameters: EUR(String), EUR(String)
2024-10-09 14:42:56.218 [http-nio-8080-exec-9] DEBUG com.jngyen.bookkeeping.backend.mapper.ExchangeRateMapper.getExchangeRate - <==      Total: 1
2024-10-09 14:42:56.218 [http-nio-8080-exec-9] INFO  com.jngyen.bookkeeping.backend.service.user.ExchangeRateService - oldRatePO: ExchangeRatePO(id=649, baseCurrency=EUR, targetCurrency=EUR, rate=1.000000, gmtModified=2024-10-09T14:42:51, gmtCreate=2024-10-09T14:42:51)
2024-10-09 14:45:12.753 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-10-09 14:45:13.707 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-10-09 14:45:13.717 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-10-09 14:45:13.720 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2024-10-09 14:45:13.720 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-10-09 14:45:13.765 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-09 14:45:13.766 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 940 ms
2024-10-09 14:45:14.530 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-10-09 14:45:14.552 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-10-09 14:45:24.125 [http-nio-8080-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-10-09 14:45:24.125 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-10-09 14:45:24.126 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-10-09 14:45:24.216 [http-nio-8080-exec-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-10-09 14:45:24.336 [http-nio-8080-exec-1] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@519f0382
2024-10-09 14:45:24.338 [http-nio-8080-exec-1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-10-09 14:45:24.371 [http-nio-8080-exec-1] INFO  com.jngyen.bookkeeping.backend.service.user.ExchangeRateService - oldRatePO: ExchangeRatePO(id=649, baseCurrency=EUR, targetCurrency=EUR, rate=1.000000, gmtModified=2024-10-09T14:42:51, gmtCreate=2024-10-09T14:42:51)
2024-10-09 14:45:58.874 [http-nio-8080-exec-4] INFO  com.jngyen.bookkeeping.backend.service.user.ExchangeRateService - oldRatePO: ExchangeRatePO(id=1, baseCurrency=CNY, targetCurrency=CNY, rate=1.000000, gmtModified=2024-10-09T14:02:09, gmtCreate=2024-10-06T16:25:59)
2024-10-09 15:12:45.926 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-10-09 15:12:47.743 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-10-09 15:12:47.759 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-10-09 15:12:47.759 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2024-10-09 15:12:47.759 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-10-09 15:12:47.858 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-09 15:12:47.864 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1712 ms
2024-10-09 15:12:48.994 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-10-09 15:12:49.018 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-10-09 15:13:06.986 [http-nio-8080-exec-2] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-10-09 15:13:06.986 [http-nio-8080-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-10-09 15:13:06.986 [http-nio-8080-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2024-10-09 15:13:07.164 [http-nio-8080-exec-2] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-10-09 15:13:07.392 [http-nio-8080-exec-2] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@32c64b69
2024-10-09 15:13:07.392 [http-nio-8080-exec-2] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-10-09 15:13:47.470 [http-nio-8080-exec-7] INFO  com.jngyen.bookkeeping.backend.service.user.ExchangeRateService - oldRatePO: null
2024-10-09 15:26:10.891 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-10-09 15:26:12.540 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-10-09 15:26:12.561 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-10-09 15:26:12.567 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2024-10-09 15:26:12.568 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30]
2024-10-09 15:26:12.657 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-10-09 15:26:12.660 [main] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1635 ms
2024-10-09 15:26:13.950 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-10-09 15:26:13.990 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-10-09 15:26:15.820 [http-nio-8080-exec-2] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-10-09 15:26:15.820 [http-nio-8080-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-10-09 15:26:15.820 [http-nio-8080-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2024-10-09 15:30:10.337 [http-nio-8080-exec-7] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-10-09 15:30:10.573 [http-nio-8080-exec-7] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@64e18bd0
2024-10-09 15:30:10.573 [http-nio-8080-exec-7] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
